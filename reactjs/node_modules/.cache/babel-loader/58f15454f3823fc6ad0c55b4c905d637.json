{"ast":null,"code":"import _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\n/**\n * Since the Markdown Editor will lose input focus when user tpye a Tab key,\n * this is a built-in plugin to enable user to input Tab character.\n * see src/demo/index.tsx.\n */\n\nimport * as React from 'react';\nimport { PluginComponent } from '../Plugin';\nimport DropList from '../../components/DropList';\nimport i18n from '../../i18n';\nimport TabMapList from './TabMapList';\nimport Icon from '../../components/Icon';\n/**\n * @field tabMapValue:  Number of spaces will be inputted. Especially, note that 1 means a '\\t' instead of ' '.\n * @field show:         Whether to show TabMapList.\n */\n\nvar TabInsert = /*#__PURE__*/function (_PluginComponent) {\n  _inheritsLoose(TabInsert, _PluginComponent);\n\n  function TabInsert(props) {\n    var _this;\n\n    _this = _PluginComponent.call(this, props) || this;\n    _this.show = _this.show.bind(_assertThisInitialized(_this));\n    _this.hide = _this.hide.bind(_assertThisInitialized(_this));\n    _this.handleChangeMapValue = _this.handleChangeMapValue.bind(_assertThisInitialized(_this));\n    _this.state = {\n      tabMapValue: _this.getConfig('tabMapValue'),\n      show: false\n    };\n    _this.handleKeyboard = {\n      key: 'Tab',\n      keyCode: 9,\n      aliasCommand: true,\n      withKey: [],\n      callback: function callback() {\n        return _this.editor.insertMarkdown('tab', {\n          tabMapValue: _this.state.tabMapValue\n        });\n      }\n    };\n    return _this;\n  }\n\n  var _proto = TabInsert.prototype;\n\n  _proto.show = function show() {\n    this.setState({\n      show: true\n    });\n  };\n\n  _proto.hide = function hide() {\n    this.setState({\n      show: false\n    });\n  };\n\n  _proto.handleChangeMapValue = function handleChangeMapValue(mapValue) {\n    this.setState({\n      tabMapValue: mapValue\n    });\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (this.editorConfig.shortcuts) {\n      this.editor.onKeyboard(this.handleKeyboard);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.editor.offKeyboard(this.handleKeyboard);\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"button button-type-header\",\n      title: i18n.get('selectTabMap'),\n      onClick: this.show,\n      onMouseLeave: this.hide\n    }, /*#__PURE__*/React.createElement(Icon, {\n      type: \"tab\"\n    }), /*#__PURE__*/React.createElement(DropList, {\n      show: this.state.show,\n      onClose: this.hide\n    }, /*#__PURE__*/React.createElement(TabMapList, {\n      value: this.state.tabMapValue,\n      onSelectMapValue: this.handleChangeMapValue\n    })));\n  };\n\n  return TabInsert;\n}(PluginComponent);\n\nTabInsert.pluginName = 'tab-insert';\nTabInsert.defaultConfig = {\n  tabMapValue: 1\n};\nexport { TabInsert as default };","map":{"version":3,"sources":["E:/fullstack/reactjs/node_modules/react-markdown-editor-lite/esm/plugins/tabInsert/index.js"],"names":["_assertThisInitialized","_inheritsLoose","React","PluginComponent","DropList","i18n","TabMapList","Icon","TabInsert","_PluginComponent","props","_this","call","show","bind","hide","handleChangeMapValue","state","tabMapValue","getConfig","handleKeyboard","key","keyCode","aliasCommand","withKey","callback","editor","insertMarkdown","_proto","prototype","setState","mapValue","componentDidMount","editorConfig","shortcuts","onKeyboard","componentWillUnmount","offKeyboard","render","createElement","className","title","get","onClick","onMouseLeave","type","onClose","value","onSelectMapValue","pluginName","defaultConfig","default"],"mappings":"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","sourcesContent":["import _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\n\n/**\n * Since the Markdown Editor will lose input focus when user tpye a Tab key,\n * this is a built-in plugin to enable user to input Tab character.\n * see src/demo/index.tsx.\n */\nimport * as React from 'react';\nimport { PluginComponent } from '../Plugin';\nimport DropList from '../../components/DropList';\nimport i18n from '../../i18n';\nimport TabMapList from './TabMapList';\nimport Icon from '../../components/Icon';\n/**\n * @field tabMapValue:  Number of spaces will be inputted. Especially, note that 1 means a '\\t' instead of ' '.\n * @field show:         Whether to show TabMapList.\n */\n\nvar TabInsert = /*#__PURE__*/function (_PluginComponent) {\n  _inheritsLoose(TabInsert, _PluginComponent);\n\n  function TabInsert(props) {\n    var _this;\n\n    _this = _PluginComponent.call(this, props) || this;\n    _this.show = _this.show.bind(_assertThisInitialized(_this));\n    _this.hide = _this.hide.bind(_assertThisInitialized(_this));\n    _this.handleChangeMapValue = _this.handleChangeMapValue.bind(_assertThisInitialized(_this));\n    _this.state = {\n      tabMapValue: _this.getConfig('tabMapValue'),\n      show: false\n    };\n    _this.handleKeyboard = {\n      key: 'Tab',\n      keyCode: 9,\n      aliasCommand: true,\n      withKey: [],\n      callback: function callback() {\n        return _this.editor.insertMarkdown('tab', {\n          tabMapValue: _this.state.tabMapValue\n        });\n      }\n    };\n    return _this;\n  }\n\n  var _proto = TabInsert.prototype;\n\n  _proto.show = function show() {\n    this.setState({\n      show: true\n    });\n  };\n\n  _proto.hide = function hide() {\n    this.setState({\n      show: false\n    });\n  };\n\n  _proto.handleChangeMapValue = function handleChangeMapValue(mapValue) {\n    this.setState({\n      tabMapValue: mapValue\n    });\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (this.editorConfig.shortcuts) {\n      this.editor.onKeyboard(this.handleKeyboard);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.editor.offKeyboard(this.handleKeyboard);\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"button button-type-header\",\n      title: i18n.get('selectTabMap'),\n      onClick: this.show,\n      onMouseLeave: this.hide\n    }, /*#__PURE__*/React.createElement(Icon, {\n      type: \"tab\"\n    }), /*#__PURE__*/React.createElement(DropList, {\n      show: this.state.show,\n      onClose: this.hide\n    }, /*#__PURE__*/React.createElement(TabMapList, {\n      value: this.state.tabMapValue,\n      onSelectMapValue: this.handleChangeMapValue\n    })));\n  };\n\n  return TabInsert;\n}(PluginComponent);\n\nTabInsert.pluginName = 'tab-insert';\nTabInsert.defaultConfig = {\n  tabMapValue: 1\n};\nexport { TabInsert as default };"]},"metadata":{},"sourceType":"module"}