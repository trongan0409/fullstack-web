{"ast":null,"code":"var _jsxFileName = \"E:\\\\fullstack\\\\reactjs\\\\src\\\\containers\\\\System\\\\Product\\\\ProductManage.js\";\nimport React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux'; //import './ProductManage.scss';\n\nimport { languages, crudActions, CommonUtils } from '../../../utils';\nimport * as actions from '../../../store/actions';\nimport LightBox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nimport TableManageProduct from './TableManageProduct';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  value: 'chocolate',\n  label: 'Chocolate'\n}, {\n  value: 'strawberry',\n  label: 'Strawberry'\n}, {\n  value: 'vanilla',\n  label: 'Vanilla'\n}];\n\nclass ProductManage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.isOpenImage = () => {};\n\n    this.handleCreateProduct = () => {\n      console.log('check state: ', this.state);\n      let isValid = this.checkValidateInput();\n      if (isValid === false) return;\n      this.props.createProduct({\n        nameProduct: this.state.nameProduct,\n        categoryType: this.state.categoryType,\n        price: this.state.price,\n        quantity: this.state.quantity,\n        slug: this.state.slug,\n        detail: this.state.detail,\n        status: this.state.status,\n        image: this.state.image\n      });\n    };\n\n    this.handleOnChangeInput = (event, id) => {\n      let copyState = { ...this.state\n      };\n      copyState[id] = event.target.value;\n      this.setState({ ...copyState\n      });\n    };\n\n    this.handleOnChangeImage = async event => {\n      let fileImage = event.target.files;\n      let file = fileImage[0];\n\n      if (file) {\n        let base64 = await CommonUtils.getBase64(file);\n        console.log('check base64 image: ', base64);\n        let imageObjectUrl = URL.createObjectURL(file);\n        this.setState({\n          previewImageURL: imageObjectUrl,\n          image: base64\n        });\n      }\n    };\n\n    this.checkValidateInput = () => {\n      let isValid = true;\n      let arrCheck = ['nameProduct', 'price', 'quantity', 'slug', 'detail', 'previewImageURL'];\n\n      for (let i = 0; i < arrCheck.length; i++) {\n        if (!this.state[arrCheck[i]]) {\n          isValid = false;\n          alert('This input is required: ' + arrCheck[i]);\n          break;\n        }\n      }\n\n      return isValid;\n    };\n\n    this.handleEditProductParent = product => {\n      console.log('check product: ', product);\n      let imageBase64 = '';\n\n      if (product.image) {\n        imageBase64 = new Buffer(product.image, 'base64').toString('binary');\n      }\n\n      this.setState({\n        id: product.id,\n        nameProduct: product.nameProduct,\n        categoryType: product.categoryType,\n        price: product.price,\n        quantity: product.quantity,\n        slug: product.slug,\n        detail: product.detail,\n        status: product.status,\n        image: '',\n        previewImageURL: imageBase64,\n        action: crudActions.EDIT\n      });\n    };\n\n    this.handleUpdateProduct = () => {\n      let {\n        image\n      } = this.state;\n\n      if (!image) {\n        this.props.editProduct({\n          id: this.state.id,\n          nameProduct: this.state.nameProduct,\n          categoryType: this.state.categoryType,\n          price: this.state.price,\n          quantity: this.state.quantity,\n          slug: this.state.slug,\n          detail: this.state.detail,\n          status: this.state.status\n        });\n      } else {\n        this.props.editProduct({\n          id: this.state.id,\n          nameProduct: this.state.nameProduct,\n          categoryType: this.state.categoryType,\n          price: this.state.price,\n          quantity: this.state.quantity,\n          slug: this.state.slug,\n          detail: this.state.detail,\n          status: this.state.status,\n          image: this.state.image\n        });\n      }\n    };\n\n    this.isOpenImage = () => {\n      if (!this.state.previewImageURL) return;\n      this.setState({\n        isOpen: true\n      });\n    };\n\n    this.handleClearForm = () => {\n      this.setState({\n        action: '',\n        previewImageURL: '',\n        id: '',\n        nameProduct: '',\n        categoryType: '',\n        price: '',\n        quantity: '',\n        slug: '',\n        detail: '',\n        status: '',\n        image: '',\n        isOpen: false\n      });\n    };\n\n    this.state = {\n      allCodes: [],\n      types: [],\n      statusProduct: [],\n      action: '',\n      previewImageURL: '',\n      id: '',\n      nameProduct: '',\n      categoryType: '',\n      price: '',\n      quantity: '',\n      slug: '',\n      detail: '',\n      status: '',\n      image: '',\n      isOpen: false,\n      selectedOption: null\n    };\n  }\n\n  async componentDidMount() {\n    this.props.getType();\n    this.props.getStatus();\n  }\n\n  componentDidUpdate(prevProps, prevState, spapshot) {\n    if (prevProps.types !== prevState.types) {\n      let arrTypes = this.props.types;\n      this.setState({\n        types: arrTypes,\n        categoryType: arrTypes && arrTypes.length > 0 ? arrTypes[0].keyMap : ''\n      });\n    }\n\n    if (prevProps.statusProduct !== prevState.statusProduct) {\n      let arrStatus = this.props.statusProduct;\n      this.setState({\n        statusProduct: arrStatus,\n        status: arrStatus && arrStatus.length > 0 ? arrStatus[0].keyMap : ''\n      });\n    }\n\n    if (prevProps.allProducts !== this.props.allProducts) {\n      let arrTypes = this.props.types;\n      let arrStatus = this.props.statusProduct;\n      this.setState({\n        nameProduct: '',\n        categoryType: arrTypes && arrTypes.length > 0 ? arrTypes[0].keyMap : '',\n        price: '',\n        quantity: '',\n        slug: '',\n        detail: '',\n        status: arrStatus && arrStatus.length > 0 ? arrStatus[0].keyMap : '',\n        image: '',\n        previewImageURL: '',\n        action: crudActions.CREATE\n      });\n    }\n  }\n\n  render() {\n    let {\n      types\n    } = this.state;\n    let {\n      statusProduct\n    } = this.state;\n    let {\n      nameProduct,\n      categoryType,\n      price,\n      quantity,\n      slug,\n      detail,\n      status\n    } = this.state;\n    let {\n      selectedOption\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"manage-product.title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 my-3\",\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"manage-product.add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 my-3\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              value: selectedOption,\n              onChange: this.handleChange,\n              options: options\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"manage-product.name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              value: nameProduct,\n              onChange: event => this.handleOnChangeInput(event, 'nameProduct')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"manage-product.type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              value: categoryType,\n              onChange: event => this.handleOnChangeInput(event, 'categoryType'),\n              children: types && types.length > 0 && types.map((item, index) => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: item.keyMap,\n                  children: item.valueVi\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"manage-product.price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              value: price,\n              onChange: event => this.handleOnChangeInput(event, 'price')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"manage-product.quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              value: quantity,\n              onChange: event => this.handleOnChangeInput(event, 'quantity')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"manage-product.status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              value: status,\n              onChange: event => this.handleOnChangeInput(event, 'status'),\n              children: statusProduct && statusProduct.length > 0 && statusProduct.map((item, index) => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: item.keyMap,\n                  children: item.valueVi\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"manage-product.slug\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              value: slug,\n              onChange: event => this.handleOnChangeInput(event, 'slug')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"manage-product.detail\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              value: detail,\n              rows: 1,\n              onChange: event => this.handleOnChangeInput(event, 'detail')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"manage-product.image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-img-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"previewImg\",\n                type: \"file\",\n                hidden: true,\n                onChange: event => this.handleOnChangeImage(event)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"label-upload\",\n                htmlFor: \"previewImg\",\n                children: [\"T\\u1EA3i \\u1EA3nh \", /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 94\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-image\",\n                style: {\n                  backgroundImage: `url(${this.state.previewImageURL})`\n                },\n                onClick: () => this.isOpenImage()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 mt-3 mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: this.state.action === crudActions.EDIT ? () => this.handleUpdateProduct() : () => this.handleCreateProduct(),\n              children: this.state.action === crudActions.EDIT ? /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"manage-product.save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 33\n              }, this) : /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"manage-product.create\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary ml-3\",\n              onClick: this.handleClearForm,\n              children: \"L\\xE0m m\\u1EDBi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 mb-5\",\n            children: /*#__PURE__*/_jsxDEV(TableManageProduct, {\n              handleEditProductParent: this.handleEditProductParent,\n              action: this.state.action\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), this.state.isOpen === true && /*#__PURE__*/_jsxDEV(LightBox, {\n        mainSrc: this.state.previewImageURL,\n        onCloseRequest: () => this.setState({\n          isOpen: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    types: state.product.types,\n    statusProduct: state.product.statusProduct,\n    allProducts: state.product.products\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getType: () => dispatch(actions.getTypeStart()),\n    getStatus: () => dispatch(actions.getStatusStart()),\n    createProduct: dataInput => dispatch(actions.createProductStart(dataInput)),\n    editProduct: product => dispatch(actions.editProductStart(product))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductManage);","map":{"version":3,"sources":["E:/fullstack/reactjs/src/containers/System/Product/ProductManage.js"],"names":["React","Component","FormattedMessage","connect","languages","crudActions","CommonUtils","actions","LightBox","TableManageProduct","Select","options","value","label","ProductManage","constructor","props","isOpenImage","handleCreateProduct","console","log","state","isValid","checkValidateInput","createProduct","nameProduct","categoryType","price","quantity","slug","detail","status","image","handleOnChangeInput","event","id","copyState","target","setState","handleOnChangeImage","fileImage","files","file","base64","getBase64","imageObjectUrl","URL","createObjectURL","previewImageURL","arrCheck","i","length","alert","handleEditProductParent","product","imageBase64","Buffer","toString","action","EDIT","handleUpdateProduct","editProduct","isOpen","handleClearForm","allCodes","types","statusProduct","selectedOption","componentDidMount","getType","getStatus","componentDidUpdate","prevProps","prevState","spapshot","arrTypes","keyMap","arrStatus","allProducts","CREATE","render","handleChange","map","item","index","valueVi","backgroundImage","mapStateToProps","products","mapDispatchToProps","dispatch","getTypeStart","getStatusStart","dataInput","createProductStart","editProductStart"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\n//import './ProductManage.scss';\r\nimport { languages, crudActions, CommonUtils } from '../../../utils';\r\nimport * as actions from '../../../store/actions';\r\nimport LightBox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\nimport TableManageProduct from './TableManageProduct';\r\nimport Select from 'react-select';\r\n\r\n\r\nconst options = [\r\n    { value: 'chocolate', label: 'Chocolate' },\r\n    { value: 'strawberry', label: 'Strawberry' },\r\n    { value: 'vanilla', label: 'Vanilla' },\r\n];\r\n\r\nclass ProductManage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allCodes: [],\r\n            types: [],\r\n            statusProduct: [],\r\n            action: '',\r\n            previewImageURL: '',\r\n            id: '',\r\n            nameProduct: '',\r\n            categoryType: '',\r\n            price: '',\r\n            quantity: '',\r\n            slug: '',\r\n            detail: '',\r\n            status: '',\r\n            image: '',\r\n            isOpen: false,\r\n            selectedOption: null,\r\n        }\r\n    }\r\n\r\n\r\n\r\n    async componentDidMount() {\r\n        this.props.getType();\r\n        this.props.getStatus();\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, spapshot) {\r\n        if (prevProps.types !== prevState.types) {\r\n            let arrTypes = this.props.types;\r\n            this.setState({\r\n                types: arrTypes,\r\n                categoryType: arrTypes && arrTypes.length > 0 ? arrTypes[0].keyMap : ''\r\n            })\r\n        }\r\n        if (prevProps.statusProduct !== prevState.statusProduct) {\r\n            let arrStatus = this.props.statusProduct;\r\n            this.setState({\r\n                statusProduct: arrStatus,\r\n                status: arrStatus && arrStatus.length > 0 ? arrStatus[0].keyMap : ''\r\n            })\r\n        }\r\n        if (prevProps.allProducts !== this.props.allProducts) {\r\n            let arrTypes = this.props.types;\r\n            let arrStatus = this.props.statusProduct;\r\n            this.setState({\r\n                nameProduct: '',\r\n                categoryType: arrTypes && arrTypes.length > 0 ? arrTypes[0].keyMap : '',\r\n                price: '',\r\n                quantity: '',\r\n                slug: '',\r\n                detail: '',\r\n                status: arrStatus && arrStatus.length > 0 ? arrStatus[0].keyMap : '',\r\n                image: '',\r\n                previewImageURL: '',\r\n                action: crudActions.CREATE\r\n            })\r\n        }\r\n\r\n\r\n    };\r\n\r\n    isOpenImage = () => {\r\n\r\n    };\r\n\r\n    handleCreateProduct = () => {\r\n        console.log('check state: ', this.state);\r\n        let isValid = this.checkValidateInput();\r\n        if (isValid === false) return;\r\n\r\n        this.props.createProduct({\r\n            nameProduct: this.state.nameProduct,\r\n            categoryType: this.state.categoryType,\r\n            price: this.state.price,\r\n            quantity: this.state.quantity,\r\n            slug: this.state.slug,\r\n            detail: this.state.detail,\r\n            status: this.state.status,\r\n            image: this.state.image\r\n        });\r\n    };\r\n\r\n    handleOnChangeInput = (event, id) => {\r\n        let copyState = { ...this.state };\r\n        copyState[id] = event.target.value;\r\n        this.setState({ ...copyState });\r\n    };\r\n\r\n    handleOnChangeImage = async (event) => {\r\n        let fileImage = event.target.files;\r\n        let file = fileImage[0];\r\n        if (file) {\r\n            let base64 = await CommonUtils.getBase64(file);\r\n            console.log('check base64 image: ', base64);\r\n            let imageObjectUrl = URL.createObjectURL(file);\r\n            this.setState({\r\n                previewImageURL: imageObjectUrl,\r\n                image: base64\r\n            })\r\n        }\r\n    };\r\n\r\n    checkValidateInput = () => {\r\n        let isValid = true;\r\n        let arrCheck = ['nameProduct', 'price', 'quantity', 'slug', 'detail', 'previewImageURL'];\r\n        for (let i = 0; i < arrCheck.length; i++) {\r\n            if (!this.state[arrCheck[i]]) {\r\n                isValid = false;\r\n                alert('This input is required: ' + arrCheck[i]);\r\n                break;\r\n            }\r\n        }\r\n        return isValid;\r\n    };\r\n\r\n    handleEditProductParent = (product) => {\r\n        console.log('check product: ', product);\r\n        let imageBase64 = '';\r\n        if (product.image) {\r\n            imageBase64 = new Buffer(product.image, 'base64').toString('binary');\r\n        }\r\n        this.setState({\r\n            id: product.id,\r\n            nameProduct: product.nameProduct,\r\n            categoryType: product.categoryType,\r\n            price: product.price,\r\n            quantity: product.quantity,\r\n            slug: product.slug,\r\n            detail: product.detail,\r\n            status: product.status,\r\n            image: '',\r\n            previewImageURL: imageBase64,\r\n            action: crudActions.EDIT\r\n        })\r\n    };\r\n\r\n    handleUpdateProduct = () => {\r\n        let { image } = this.state;\r\n        if (!image) {\r\n            this.props.editProduct({\r\n                id: this.state.id,\r\n                nameProduct: this.state.nameProduct,\r\n                categoryType: this.state.categoryType,\r\n                price: this.state.price,\r\n                quantity: this.state.quantity,\r\n                slug: this.state.slug,\r\n                detail: this.state.detail,\r\n                status: this.state.status,\r\n            })\r\n        } else {\r\n            this.props.editProduct({\r\n                id: this.state.id,\r\n                nameProduct: this.state.nameProduct,\r\n                categoryType: this.state.categoryType,\r\n                price: this.state.price,\r\n                quantity: this.state.quantity,\r\n                slug: this.state.slug,\r\n                detail: this.state.detail,\r\n                status: this.state.status,\r\n                image: this.state.image,\r\n            })\r\n        }\r\n    };\r\n\r\n    isOpenImage = () => {\r\n        if (!this.state.previewImageURL) return;\r\n\r\n        this.setState({ isOpen: true });\r\n    };\r\n\r\n    handleClearForm = () => {\r\n        this.setState({\r\n            action: '',\r\n            previewImageURL: '',\r\n            id: '',\r\n            nameProduct: '',\r\n            categoryType: '',\r\n            price: '',\r\n            quantity: '',\r\n            slug: '',\r\n            detail: '',\r\n            status: '',\r\n            image: '',\r\n            isOpen: false\r\n        })\r\n    };\r\n\r\n    render() {\r\n\r\n        let { types } = this.state;\r\n        let { statusProduct } = this.state;\r\n        let { nameProduct, categoryType, price, quantity, slug, detail, status } = this.state;\r\n        let { selectedOption } = this.state;\r\n\r\n        return (\r\n            <div className='product-container'>\r\n                <div className=\"title\" ><FormattedMessage id=\"manage-product.title\" /></div>\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        <div className='col-12 my-3'><FormattedMessage id=\"manage-product.add\" /></div>\r\n                        <div className='col-12 my-3'>\r\n                            <Select\r\n                                value={selectedOption}\r\n                                onChange={this.handleChange}\r\n                                options={options}\r\n                            />\r\n                        </div>\r\n                        <div className='col-3'>\r\n                            <label><FormattedMessage id=\"manage-product.name\" /></label>\r\n                            <input className='form-control' type='text' value={nameProduct}\r\n                                onChange={(event) => this.handleOnChangeInput(event, 'nameProduct')} />\r\n                        </div>\r\n                        <div className='col-3'>\r\n                            <label><FormattedMessage id=\"manage-product.type\" /></label>\r\n                            <select className=\"form-control\" value={categoryType}\r\n                                onChange={(event) => this.handleOnChangeInput(event, 'categoryType')}\r\n                            >\r\n                                {types && types.length > 0 &&\r\n                                    types.map((item, index) => {\r\n                                        return (\r\n                                            <option key={index} value={item.keyMap}>{item.valueVi}</option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        <div className='col-2'>\r\n                            <label><FormattedMessage id=\"manage-product.price\" /></label>\r\n                            <input className='form-control' type='text' value={price}\r\n                                onChange={(event) => this.handleOnChangeInput(event, 'price')}\r\n                            />\r\n                        </div>\r\n                        <div className='col-2'>\r\n                            <label><FormattedMessage id=\"manage-product.quantity\" /></label>\r\n                            <input className='form-control' type='text' value={quantity}\r\n                                onChange={(event) => this.handleOnChangeInput(event, 'quantity')}\r\n                            />\r\n                        </div>\r\n                        <div className='col-2'>\r\n                            <label><FormattedMessage id=\"manage-product.status\" /></label>\r\n                            <select className=\"form-control\" value={status}\r\n                                onChange={(event) => this.handleOnChangeInput(event, 'status')}\r\n                            >\r\n                                {statusProduct && statusProduct.length > 0 &&\r\n                                    statusProduct.map((item, index) => {\r\n                                        return (\r\n                                            <option key={index} value={item.keyMap}>{item.valueVi}</option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        <div className='col-4'>\r\n                            <label><FormattedMessage id=\"manage-product.slug\" /></label>\r\n                            <input className='form-control' type='text' value={slug}\r\n                                onChange={(event) => this.handleOnChangeInput(event, 'slug')} />\r\n                        </div>\r\n                        <div className='col-5'>\r\n                            <label><FormattedMessage id=\"manage-product.detail\" /></label>\r\n                            <textarea className='form-control' value={detail} rows={1}\r\n                                onChange={(event) => this.handleOnChangeInput(event, 'detail')} />\r\n                        </div>\r\n                        <div className='col-3'>\r\n                            <label><FormattedMessage id=\"manage-product.image\" /></label>\r\n                            <div className='preview-img-container'>\r\n                                <input id='previewImg' type='file' hidden onChange={(event) => this.handleOnChangeImage(event)} />\r\n                                <label className='label-upload' htmlFor=\"previewImg\">Tải ảnh <i className='fas fa-upload'></i></label>\r\n                                <div\r\n                                    className='preview-image'\r\n                                    style={{ backgroundImage: `url(${this.state.previewImageURL})` }}\r\n                                    onClick={() => this.isOpenImage()}\r\n                                ></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-12 mt-3 mb-4'>\r\n                            <button\r\n                                className='btn btn-primary'\r\n                                onClick={this.state.action === crudActions.EDIT ? () => this.handleUpdateProduct() : () => this.handleCreateProduct()}\r\n                            >{this.state.action === crudActions.EDIT ?\r\n                                <FormattedMessage id=\"manage-product.save\" />\r\n                                :\r\n                                <FormattedMessage id=\"manage-product.create\" />}\r\n                            </button>\r\n                            <button\r\n                                className='btn btn-secondary ml-3'\r\n                                onClick={this.handleClearForm}\r\n                            >\r\n                                Làm mới\r\n                            </button>\r\n                        </div>\r\n                        <div className='col-12 mb-5'>\r\n                            <TableManageProduct\r\n                                handleEditProductParent={this.handleEditProductParent}\r\n                                action={this.state.action}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.isOpen === true &&\r\n                    <LightBox\r\n                        mainSrc={this.state.previewImageURL}\r\n                        onCloseRequest={() => this.setState({ isOpen: false })}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        types: state.product.types,\r\n        statusProduct: state.product.statusProduct,\r\n        allProducts: state.product.products\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getType: () => dispatch(actions.getTypeStart()),\r\n        getStatus: () => dispatch(actions.getStatusStart()),\r\n        createProduct: (dataInput) => dispatch(actions.createProductStart(dataInput)),\r\n        editProduct: (product) => dispatch(actions.editProductStart(product))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductManage);\r\n"]},"metadata":{},"sourceType":"module"}