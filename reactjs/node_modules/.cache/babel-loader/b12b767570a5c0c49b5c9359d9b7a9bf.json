{"ast":null,"code":"var _jsxFileName = \"E:\\\\fullstack\\\\reactjs\\\\src\\\\containers\\\\System\\\\Posts\\\\TableManagePosts.js\";\nimport React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport './TableManagePosts.scss';\nimport * as actions from '../../../store/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TableManagePosts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDeletePosts = posts => {\n      this.props.deletePosts(posts.id);\n    };\n\n    this.handleEditPosts = posts => {\n      this.props.handleEditPostsParent(posts);\n    };\n\n    this.state = {\n      allPosts: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.getAllPosts();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.allPosts !== this.props.allPosts) {\n      this.setState({\n        allPosts: this.props.allPosts\n      });\n    }\n  }\n\n  render() {\n    let {\n      allPosts\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-container mx-0\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"TableManagePosts\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Ti\\xEAu \\u0111\\u1EC1 b\\xE0i vi\\u1EBFt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Lo\\u1EA1i\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Ng\\xE0y t\\u1EA1o m\\u1EDBi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Ng\\xE0y c\\u1EADp nh\\u1EADt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), allPosts && allPosts.length > 0 && allPosts.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.typePosts\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.createAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.UpdateAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn-edit\",\n                onClick: () => this.handleEditPosts(item),\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-pencil-alt\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 42\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  this.handleDeletePosts(item);\n                },\n                type: \"button\",\n                className: \"btn-delete\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-trash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 42\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    allPosts: state.posts.allPosts\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllPosts: () => dispatch(actions.getAllPostsStart()),\n    deletePosts: id => dispatch(actions.deletePostsStart(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableManagePosts);","map":{"version":3,"sources":["E:/fullstack/reactjs/src/containers/System/Posts/TableManagePosts.js"],"names":["React","Component","FormattedMessage","connect","actions","TableManagePosts","constructor","props","handleDeletePosts","posts","deletePosts","id","handleEditPosts","handleEditPostsParent","state","allPosts","componentDidMount","getAllPosts","componentDidUpdate","prevProps","prevState","snapshot","setState","render","length","map","item","index","title","typePosts","createAt","UpdateAt","mapStateToProps","mapDispatchToProps","dispatch","getAllPostsStart","deletePostsStart"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport './TableManagePosts.scss';\r\nimport * as actions from '../../../store/actions';\r\n\r\nclass TableManagePosts extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allPosts: []\r\n        };\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getAllPosts();\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.allPosts !== this.props.allPosts) {\r\n            this.setState({ allPosts: this.props.allPosts })\r\n        }\r\n    };\r\n\r\n    handleDeletePosts = (posts) => {\r\n        this.props.deletePosts(posts.id);\r\n    }\r\n\r\n    handleEditPosts = (posts) => {\r\n        this.props.handleEditPostsParent(posts);\r\n    };\r\n\r\n    render() {\r\n        let { allPosts } = this.state;\r\n\r\n        return (\r\n            <div className='posts-container mx-0'>\r\n                <table id='TableManagePosts'>\r\n                    <tr>\r\n                        <th>Tiêu đề bài viết</th>\r\n                        <th>Loại</th>\r\n                        <th>Ngày tạo mới</th>\r\n                        <th>Ngày cập nhật</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                    {allPosts && allPosts.length > 0 &&\r\n                        allPosts.map((item, index) => {\r\n                            return (\r\n                                <tr key={index}>\r\n                                    <td>{item.title}</td>\r\n                                    <td>{item.typePosts}</td>\r\n                                    <td>{item.createAt}</td>\r\n                                    <td>{item.UpdateAt}</td>\r\n                                    <td>\r\n                                        <button\r\n                                            type='button'\r\n                                            className='btn-edit'\r\n                                            onClick={() => this.handleEditPosts(item)}\r\n                                        ><i className='fas fa-pencil-alt'></i></button>\r\n                                        <button\r\n                                            onClick={() => { this.handleDeletePosts(item) }}\r\n                                            type='button'\r\n                                            className='btn-delete'\r\n                                        ><i className='fas fa-trash'></i></button>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </table>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allPosts: state.posts.allPosts\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getAllPosts: () => dispatch(actions.getAllPostsStart()),\r\n        deletePosts: (id) => dispatch(actions.deletePostsStart(id))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableManagePosts);\r\n"]},"metadata":{},"sourceType":"module"}