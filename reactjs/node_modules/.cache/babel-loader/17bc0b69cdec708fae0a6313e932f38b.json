{"ast":null,"code":"var _jsxFileName = \"E:\\\\fullstack\\\\reactjs\\\\src\\\\containers\\\\System\\\\Product\\\\ProductManage.js\";\nimport React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport './UserRedux.scss';\nimport { languages, crudActions, CommonUtils } from '../../../utils';\nimport * as actions from '../../../store/actions';\nimport LightBox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nimport TableManageUser from './TableManageUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserRedux extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChangeImage = async event => {\n      let fileImage = event.target.files;\n      let file = fileImage[0];\n\n      if (file) {\n        let base64 = await CommonUtils.getBase64(file);\n        console.log('check base64 image: ', base64);\n        let imageObjectUrl = URL.createObjectURL(file);\n        this.setState({\n          previewImageURL: imageObjectUrl,\n          avatar: base64\n        });\n      }\n    };\n\n    this.isOpenImage = () => {\n      if (!this.state.previewImageURL) return;\n      this.setState({\n        isOpen: true\n      });\n    };\n\n    this.handleCreateUser = () => {\n      let isValid = this.checkValidateInput();\n      if (isValid === false) return;\n      this.props.createNewUser({\n        email: this.state.email,\n        password: this.state.password,\n        fullName: this.state.fullName,\n        address: this.state.address,\n        gender: this.state.gender,\n        phoneNumber: this.state.phoneNumber,\n        roleId: this.state.role,\n        avatar: this.state.avatar\n      });\n    };\n\n    this.handleUpdateUser = () => {\n      this.props.editUser({\n        id: this.state.userEditId,\n        fullName: this.state.fullName,\n        address: this.state.address,\n        gender: this.state.gender,\n        phoneNumber: this.state.phoneNumber,\n        roleId: this.state.role,\n        avatar: this.state.avatar\n      });\n    };\n\n    this.handleOnChangeInput = (event, id) => {\n      let copyState = { ...this.state\n      };\n      copyState[id] = event.target.value;\n      this.setState({ ...copyState\n      });\n    };\n\n    this.checkValidateInput = () => {\n      let isValid = true;\n      let arrCheck = ['email', 'password', 'fullName', 'phoneNumber', 'address'];\n\n      for (let i = 0; i < arrCheck.length; i++) {\n        if (!this.state[arrCheck[i]]) {\n          isValid = false;\n          alert('This input is required: ' + arrCheck[i]);\n          break;\n        }\n      }\n\n      return isValid;\n    };\n\n    this.handleEditUserParent = user => {\n      let imageBase64 = '';\n\n      if (user.image) {\n        imageBase64 = new Buffer(user.image, 'base64').toString('binary');\n      }\n\n      this.setState({\n        email: user.email,\n        password: 'hashcode',\n        fullName: user.fullName,\n        phoneNumber: user.phoneNumber,\n        address: user.address,\n        gender: user.gender,\n        role: user.roleId,\n        avatar: '',\n        previewImageURL: imageBase64,\n        action: crudActions.EDIT,\n        userEditId: user.id\n      });\n    };\n\n    this.state = {\n      genderArray: [],\n      roleArray: [],\n      previewImageURL: '',\n      isOpen: false,\n      email: '',\n      password: '',\n      fullName: '',\n      phoneNumber: '',\n      address: '',\n      gender: '',\n      role: '',\n      avatar: '',\n      action: '',\n      userEditId: ''\n    };\n  }\n\n  async componentDidMount() {\n    this.props.getGenderStart();\n    this.props.getRoleStart(); // try {\n    //     let res = await getAllCodeService('gender');\n    //     if (res && res.errCode === 0) {\n    //         this.setState({\n    //             genderArray: res.data\n    //         })\n    //     }\n    //     console.log('check res', res);\n    // } catch (e) {\n    //     console.log(e);\n    // }\n  }\n\n  componentDidUpdate(prevProps, prevState, spapshot) {\n    if (prevProps.genderRedux !== this.props.genderRedux) {\n      let arrGender = this.props.genderRedux;\n      this.setState({\n        genderArray: arrGender,\n        gender: arrGender && arrGender.length > 0 ? arrGender[0].key : ''\n      });\n    }\n\n    ;\n\n    if (prevProps.roleRedux !== this.props.roleRedux) {\n      let arrRole = this.props.roleRedux;\n      this.setState({\n        roleArray: arrRole,\n        role: arrRole && arrRole.length > 0 ? arrRole[0].key : ''\n      });\n    }\n\n    if (prevProps.allUsers !== this.props.allUsers) {\n      let arrGender = this.props.genderRedux;\n      let arrRole = this.props.roleRedux;\n      this.setState({\n        email: '',\n        password: '',\n        fullName: '',\n        phoneNumber: '',\n        address: '',\n        gender: arrGender && arrGender.length > 0 ? arrGender[0].key : '',\n        role: arrRole && arrRole.length > 0 ? arrRole[0].key : '',\n        avatar: '',\n        previewImageURL: '',\n        action: crudActions.CREATE\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"PRODUCT MANAGEMENT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language,\n    genderRedux: state.admin.genders,\n    roleRedux: state.admin.roles,\n    isLoadingGender: state.admin.isLoadingGender,\n    allUsers: state.admin.users\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getGenderStart: () => dispatch(actions.fetchGenderStart()),\n    getRoleStart: () => dispatch(actions.fetchRoleStart()),\n    createNewUser: data => dispatch(actions.createNewUser(data)),\n    getAllUsers: () => dispatch(actions.getAllUserStart()),\n    editUser: data => dispatch(actions.editUser(data)) //processLogout: () => dispatch(actions.processLogout()),\n    //changeLanguageAppRedux: (language) => dispatch(actions.changeLanguageApp(language))\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRedux);","map":{"version":3,"sources":["E:/fullstack/reactjs/src/containers/System/Product/ProductManage.js"],"names":["React","Component","FormattedMessage","connect","languages","crudActions","CommonUtils","actions","LightBox","TableManageUser","UserRedux","constructor","props","handleOnChangeImage","event","fileImage","target","files","file","base64","getBase64","console","log","imageObjectUrl","URL","createObjectURL","setState","previewImageURL","avatar","isOpenImage","state","isOpen","handleCreateUser","isValid","checkValidateInput","createNewUser","email","password","fullName","address","gender","phoneNumber","roleId","role","handleUpdateUser","editUser","id","userEditId","handleOnChangeInput","copyState","value","arrCheck","i","length","alert","handleEditUserParent","user","imageBase64","image","Buffer","toString","action","EDIT","genderArray","roleArray","componentDidMount","getGenderStart","getRoleStart","componentDidUpdate","prevProps","prevState","spapshot","genderRedux","arrGender","key","roleRedux","arrRole","allUsers","CREATE","render","mapStateToProps","language","app","admin","genders","roles","isLoadingGender","users","mapDispatchToProps","dispatch","fetchGenderStart","fetchRoleStart","data","getAllUsers","getAllUserStart"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport './UserRedux.scss';\r\nimport { languages, crudActions, CommonUtils } from '../../../utils';\r\nimport * as actions from '../../../store/actions';\r\nimport LightBox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\nimport TableManageUser from './TableManageUser';\r\n\r\nclass UserRedux extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            genderArray: [],\r\n            roleArray: [],\r\n            previewImageURL: '',\r\n            isOpen: false,\r\n\r\n            email: '',\r\n            password: '',\r\n            fullName: '',\r\n            phoneNumber: '',\r\n            address: '',\r\n            gender: '',\r\n            role: '',\r\n            avatar: '',\r\n\r\n            action: '',\r\n            userEditId: ''\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.getGenderStart();\r\n        this.props.getRoleStart();\r\n        // try {\r\n        //     let res = await getAllCodeService('gender');\r\n        //     if (res && res.errCode === 0) {\r\n        //         this.setState({\r\n        //             genderArray: res.data\r\n        //         })\r\n        //     }\r\n        //     console.log('check res', res);\r\n        // } catch (e) {\r\n        //     console.log(e);\r\n        // }\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, spapshot) {\r\n        if (prevProps.genderRedux !== this.props.genderRedux) {\r\n            let arrGender = this.props.genderRedux;\r\n            this.setState({\r\n                genderArray: arrGender,\r\n                gender: arrGender && arrGender.length > 0 ? arrGender[0].key : ''\r\n            })\r\n        };\r\n\r\n        if (prevProps.roleRedux !== this.props.roleRedux) {\r\n            let arrRole = this.props.roleRedux;\r\n            this.setState({\r\n                roleArray: arrRole,\r\n                role: arrRole && arrRole.length > 0 ? arrRole[0].key : ''\r\n            })\r\n        }\r\n\r\n        if (prevProps.allUsers !== this.props.allUsers) {\r\n            let arrGender = this.props.genderRedux;\r\n            let arrRole = this.props.roleRedux;\r\n            this.setState({\r\n                email: '',\r\n                password: '',\r\n                fullName: '',\r\n                phoneNumber: '',\r\n                address: '',\r\n                gender: arrGender && arrGender.length > 0 ? arrGender[0].key : '',\r\n                role: arrRole && arrRole.length > 0 ? arrRole[0].key : '',\r\n                avatar: '',\r\n                previewImageURL: '',\r\n                action: crudActions.CREATE\r\n            })\r\n        }\r\n    };\r\n\r\n    handleOnChangeImage = async (event) => {\r\n        let fileImage = event.target.files;\r\n        let file = fileImage[0];\r\n        if (file) {\r\n            let base64 = await CommonUtils.getBase64(file);\r\n            console.log('check base64 image: ', base64);\r\n            let imageObjectUrl = URL.createObjectURL(file);\r\n            this.setState({\r\n                previewImageURL: imageObjectUrl,\r\n                avatar: base64\r\n            })\r\n        }\r\n    };\r\n\r\n    isOpenImage = () => {\r\n        if (!this.state.previewImageURL) return;\r\n\r\n        this.setState({ isOpen: true });\r\n    };\r\n\r\n    handleCreateUser = () => {\r\n        let isValid = this.checkValidateInput();\r\n        if (isValid === false) return;\r\n\r\n        this.props.createNewUser({\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            fullName: this.state.fullName,\r\n            address: this.state.address,\r\n            gender: this.state.gender,\r\n            phoneNumber: this.state.phoneNumber,\r\n            roleId: this.state.role,\r\n            avatar: this.state.avatar\r\n        });\r\n    };\r\n    handleUpdateUser = () => {\r\n        this.props.editUser({\r\n            id: this.state.userEditId,\r\n            fullName: this.state.fullName,\r\n            address: this.state.address,\r\n            gender: this.state.gender,\r\n            phoneNumber: this.state.phoneNumber,\r\n            roleId: this.state.role,\r\n            avatar: this.state.avatar\r\n        });\r\n    };\r\n\r\n    handleOnChangeInput = (event, id) => {\r\n        let copyState = { ...this.state };\r\n        copyState[id] = event.target.value;\r\n        this.setState({ ...copyState });\r\n    };\r\n\r\n    checkValidateInput = () => {\r\n        let isValid = true;\r\n        let arrCheck = ['email', 'password', 'fullName', 'phoneNumber', 'address'];\r\n        for (let i = 0; i < arrCheck.length; i++) {\r\n            if (!this.state[arrCheck[i]]) {\r\n                isValid = false;\r\n                alert('This input is required: ' + arrCheck[i]);\r\n                break;\r\n            }\r\n        }\r\n        return isValid;\r\n    };\r\n\r\n    handleEditUserParent = (user) => {\r\n        let imageBase64 = '';\r\n        if (user.image) {\r\n            imageBase64 = new Buffer(user.image, 'base64').toString('binary');\r\n        }\r\n\r\n        this.setState({\r\n            email: user.email,\r\n            password: 'hashcode',\r\n            fullName: user.fullName,\r\n            phoneNumber: user.phoneNumber,\r\n            address: user.address,\r\n            gender: user.gender,\r\n            role: user.roleId,\r\n            avatar: '',\r\n            previewImageURL: imageBase64,\r\n            action: crudActions.EDIT,\r\n            userEditId: user.id\r\n        })\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className='title'>PRODUCT MANAGEMENT</div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n        genderRedux: state.admin.genders,\r\n        roleRedux: state.admin.roles,\r\n        isLoadingGender: state.admin.isLoadingGender,\r\n        allUsers: state.admin.users\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getGenderStart: () => dispatch(actions.fetchGenderStart()),\r\n        getRoleStart: () => dispatch(actions.fetchRoleStart()),\r\n        createNewUser: (data) => dispatch(actions.createNewUser(data)),\r\n        getAllUsers: () => dispatch(actions.getAllUserStart()),\r\n        editUser: (data) => dispatch(actions.editUser(data))\r\n\r\n        //processLogout: () => dispatch(actions.processLogout()),\r\n        //changeLanguageAppRedux: (language) => dispatch(actions.changeLanguageApp(language))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRedux);\r\n"]},"metadata":{},"sourceType":"module"}