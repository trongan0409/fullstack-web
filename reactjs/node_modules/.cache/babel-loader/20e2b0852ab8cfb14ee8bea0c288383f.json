{"ast":null,"code":"var _jsxFileName = \"E:\\\\fullstack\\\\reactjs\\\\src\\\\containers\\\\System\\\\Posts\\\\PostsManage.js\";\nimport React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { languages, crudActions, CommonUtils } from '../../../utils';\nimport * as actions from '../../../store/actions';\nimport LightBox from 'react-image-lightbox';\nimport './PostsManage.scss';\nimport 'react-image-lightbox/style.css';\nimport MarkdownIt from 'markdown-it';\nimport MdEditor from 'react-markdown-editor-lite';\nimport 'react-markdown-editor-lite/lib/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mdParser = new MarkdownIt();\n\nclass ProductManage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChangeInput = (event, id) => {\n      let copyState = { ...this.state\n      };\n      copyState[id] = event.target.value;\n      this.setState({ ...copyState\n      });\n    };\n\n    this.handleEditorChange = ({\n      html,\n      text\n    }) => {\n      this.setState({\n        contentMarkdown: text,\n        contentHTML: html\n      });\n    };\n\n    this.handleClearForm = () => {\n      this.setState({\n        postsType: '',\n        title: '',\n        contentMarkdown: ''\n      });\n    };\n\n    this.state = {\n      contentMarkdown: '',\n      contentHTML: '',\n      text: '',\n      postsType: '',\n      title: ''\n    };\n  }\n\n  async componentDidMount() {}\n\n  componentDidUpdate(prevProps, prevState, spapshot) {}\n\n  render() {\n    let {\n      postsType,\n      title\n    } = this.state;\n    console.log('check input state: ', this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 title\",\n          children: \"POSTS MANAGEMENT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 my-3\",\n          children: \"Create Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Posts type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: postsType,\n            onChange: event => this.handleOnChangeInput(event, 'postsType'),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"....\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-7\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Posts title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            value: title,\n            onChange: event => this.handleOnChangeInput(event, 'title')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Posts Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-img-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"previewImg\",\n              type: \"file\",\n              hidden: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label-upload\",\n              htmlFor: \"previewImg\",\n              children: [\"T\\u1EA3i \\u1EA3nh \", /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 90\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-image\",\n              style: {\n                backgroundImage: `url(${this.state.previewImageURL})`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Posts content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MdEditor, {\n            style: {\n              height: '500px'\n            },\n            renderHTML: text => mdParser.render(text),\n            onChange: this.handleEditorChange,\n            value: this.state.contentMarkdown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4 pt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            children: \"Create posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: this.handleClearForm,\n            children: \"Clear form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductManage);","map":{"version":3,"sources":["E:/fullstack/reactjs/src/containers/System/Posts/PostsManage.js"],"names":["React","Component","FormattedMessage","connect","languages","crudActions","CommonUtils","actions","LightBox","MarkdownIt","MdEditor","mdParser","ProductManage","constructor","props","handleOnChangeInput","event","id","copyState","state","target","value","setState","handleEditorChange","html","text","contentMarkdown","contentHTML","handleClearForm","postsType","title","componentDidMount","componentDidUpdate","prevProps","prevState","spapshot","render","console","log","backgroundImage","previewImageURL","height","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { languages, crudActions, CommonUtils } from '../../../utils';\r\nimport * as actions from '../../../store/actions';\r\nimport LightBox from 'react-image-lightbox';\r\nimport './PostsManage.scss';\r\nimport 'react-image-lightbox/style.css';\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\n\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\r\n\r\n\r\nclass ProductManage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            contentMarkdown: '',\r\n            contentHTML: '',\r\n            text: '',\r\n            postsType: '',\r\n            title: ''\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, spapshot) {\r\n\r\n    };\r\n\r\n    handleOnChangeInput = (event, id) => {\r\n        let copyState = { ...this.state };\r\n        copyState[id] = event.target.value;\r\n        this.setState({ ...copyState });\r\n    };\r\n\r\n    handleEditorChange = ({ html, text }) => {\r\n        this.setState({\r\n            contentMarkdown: text,\r\n            contentHTML: html\r\n        })\r\n    };\r\n\r\n    handleClearForm = () => {\r\n        this.setState({\r\n            postsType: '',\r\n            title: '',\r\n            contentMarkdown: ''\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let { postsType, title } = this.state;\r\n        console.log('check input state: ', this.state);\r\n\r\n        return (\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <div className='col-12 title'>POSTS MANAGEMENT</div>\r\n                    <div className='col-12 my-3'>Create Posts</div>\r\n                    <div className='col-2'>\r\n                        <label>Posts type</label>\r\n                        <select\r\n                            className='form-control'\r\n                            value={postsType}\r\n                            onChange={(event) => this.handleOnChangeInput(event, 'postsType')}\r\n                        >\r\n                            <option>....</option>\r\n                            <option>1</option>\r\n                            <option>2</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='col-7'>\r\n                        <label>Posts title</label>\r\n                        <input\r\n                            className='form-control'\r\n                            type='text'\r\n                            value={title}\r\n                            onChange={(event) => this.handleOnChangeInput(event, 'title')}\r\n                        ></input>\r\n                    </div>\r\n                    <div className='col-3'>\r\n                        <label>Posts Image</label>\r\n                        <div className='preview-img-container'>\r\n                            <input id='previewImg' type='file' hidden />\r\n                            <label className='label-upload' htmlFor=\"previewImg\">Tải ảnh <i className='fas fa-upload'></i></label>\r\n                            <div\r\n                                className='preview-image'\r\n                                style={{ backgroundImage: `url(${this.state.previewImageURL})` }}\r\n                            ></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-12'>\r\n                        <label>Posts content</label>\r\n                        <MdEditor\r\n                            style={{ height: '500px' }}\r\n                            renderHTML={text => mdParser.render(text)}\r\n                            onChange={this.handleEditorChange}\r\n                            value={this.state.contentMarkdown}\r\n                        />\r\n                    </div>\r\n                    <div className='col-4 pt-3'>\r\n                        <button className='btn btn-primary'>Create posts</button>\r\n                        <button\r\n                            className='btn btn-secondary'\r\n                            onClick={this.handleClearForm}\r\n                        >Clear form</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductManage);\r\n"]},"metadata":{},"sourceType":"module"}