{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport * as React from 'react';\nimport Icon from '../components/Icon';\nimport i18n from '../i18n';\nimport { PluginComponent } from './Plugin';\nvar NEXT_ACTION;\n\n(function (NEXT_ACTION) {\n  NEXT_ACTION[NEXT_ACTION[\"SHOW_ALL\"] = 0] = \"SHOW_ALL\";\n  NEXT_ACTION[NEXT_ACTION[\"SHOW_MD\"] = 1] = \"SHOW_MD\";\n  NEXT_ACTION[NEXT_ACTION[\"SHOW_HTML\"] = 2] = \"SHOW_HTML\";\n})(NEXT_ACTION || (NEXT_ACTION = {}));\n\nvar ModeToggle = /*#__PURE__*/function (_PluginComponent) {\n  _inheritsLoose(ModeToggle, _PluginComponent);\n\n  function ModeToggle(props) {\n    var _this;\n\n    _this = _PluginComponent.call(this, props) || this;\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.state = {\n      view: _this.editor.getView()\n    };\n    return _this;\n  }\n\n  var _proto = ModeToggle.prototype;\n\n  _proto.handleClick = function handleClick() {\n    switch (this.next) {\n      case NEXT_ACTION.SHOW_ALL:\n        this.editor.setView({\n          html: true,\n          md: true\n        });\n        break;\n\n      case NEXT_ACTION.SHOW_HTML:\n        this.editor.setView({\n          html: true,\n          md: false\n        });\n        break;\n\n      case NEXT_ACTION.SHOW_MD:\n        this.editor.setView({\n          html: false,\n          md: true\n        });\n        break;\n    }\n  };\n\n  _proto.handleChange = function handleChange(view) {\n    this.setState({\n      view: view\n    });\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.editor.on('viewchange', this.handleChange);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.editor.off('viewchange', this.handleChange);\n  };\n\n  _proto.getDisplayInfo = function getDisplayInfo() {\n    var next = this.next;\n\n    switch (next) {\n      case NEXT_ACTION.SHOW_ALL:\n        return {\n          icon: 'view-split',\n          title: 'All'\n        };\n\n      case NEXT_ACTION.SHOW_HTML:\n        return {\n          icon: 'visibility',\n          title: 'Preview'\n        };\n\n      default:\n        return {\n          icon: 'keyboard',\n          title: 'Editor'\n        };\n    }\n  };\n\n  _proto.render = function render() {\n    if (this.isDisplay) {\n      var display = this.getDisplayInfo();\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: \"button button-type-mode\",\n        title: i18n.get(\"btnMode\" + display.title),\n        onClick: this.handleClick\n      }, /*#__PURE__*/React.createElement(Icon, {\n        type: display.icon\n      }));\n    }\n\n    return null;\n  };\n\n  _createClass(ModeToggle, [{\n    key: \"isDisplay\",\n    get: function get() {\n      var canView = this.editorConfig.canView;\n\n      if (canView) {\n        // 至少有两种情况可以显示的时候，才会显示切换按钮\n        return [canView.html, canView.md, canView.both].filter(function (it) {\n          return it;\n        }).length >= 2;\n      }\n\n      return false;\n    }\n    /**\n     * 显示标准：\n     * 两个都显示的时候，点击显示MD，隐藏HTML\n     * 只显示HTML的时候，点击全部显示\n     * 只显示MD的时候，点击显示HTML，隐藏MD\n     * 如果当前标准因canView不可用，则顺延至下一个\n     * 如果都不可用，则返回当前状态\n     */\n\n  }, {\n    key: \"next\",\n    get: function get() {\n      var canView = this.editorConfig.canView;\n      var view = this.state.view;\n      var actions = [NEXT_ACTION.SHOW_ALL, NEXT_ACTION.SHOW_MD, NEXT_ACTION.SHOW_HTML];\n\n      if (canView) {\n        if (!canView.both) {\n          actions.splice(actions.indexOf(NEXT_ACTION.SHOW_ALL), 1);\n        }\n\n        if (!canView.md) {\n          actions.splice(actions.indexOf(NEXT_ACTION.SHOW_MD), 1);\n        }\n\n        if (!canView.html) {\n          actions.splice(actions.indexOf(NEXT_ACTION.SHOW_HTML), 1);\n        }\n      }\n\n      var current = NEXT_ACTION.SHOW_MD;\n\n      if (view.html) {\n        current = NEXT_ACTION.SHOW_HTML;\n      }\n\n      if (view.html && view.md) {\n        current = NEXT_ACTION.SHOW_ALL;\n      }\n\n      if (actions.length === 0) return current;\n      if (actions.length === 1) return actions[0];\n      var index = actions.indexOf(current);\n      return index < actions.length - 1 ? actions[index + 1] : actions[0];\n    }\n  }]);\n\n  return ModeToggle;\n}(PluginComponent);\n\nModeToggle.pluginName = 'mode-toggle';\nModeToggle.align = 'right';\nexport default ModeToggle;","map":{"version":3,"sources":["E:/fullstack/reactjs/node_modules/react-markdown-editor-lite/esm/plugins/modeToggle.js"],"names":["_createClass","_assertThisInitialized","_inheritsLoose","React","Icon","i18n","PluginComponent","NEXT_ACTION","ModeToggle","_PluginComponent","props","_this","call","handleClick","bind","handleChange","state","view","editor","getView","_proto","prototype","next","SHOW_ALL","setView","html","md","SHOW_HTML","SHOW_MD","setState","componentDidMount","on","componentWillUnmount","off","getDisplayInfo","icon","title","render","isDisplay","display","createElement","className","get","onClick","type","key","canView","editorConfig","both","filter","it","length","actions","splice","indexOf","current","index","pluginName","align"],"mappings":"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","sourcesContent":["import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport * as React from 'react';\nimport Icon from '../components/Icon';\nimport i18n from '../i18n';\nimport { PluginComponent } from './Plugin';\nvar NEXT_ACTION;\n\n(function (NEXT_ACTION) {\n  NEXT_ACTION[NEXT_ACTION[\"SHOW_ALL\"] = 0] = \"SHOW_ALL\";\n  NEXT_ACTION[NEXT_ACTION[\"SHOW_MD\"] = 1] = \"SHOW_MD\";\n  NEXT_ACTION[NEXT_ACTION[\"SHOW_HTML\"] = 2] = \"SHOW_HTML\";\n})(NEXT_ACTION || (NEXT_ACTION = {}));\n\nvar ModeToggle = /*#__PURE__*/function (_PluginComponent) {\n  _inheritsLoose(ModeToggle, _PluginComponent);\n\n  function ModeToggle(props) {\n    var _this;\n\n    _this = _PluginComponent.call(this, props) || this;\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.state = {\n      view: _this.editor.getView()\n    };\n    return _this;\n  }\n\n  var _proto = ModeToggle.prototype;\n\n  _proto.handleClick = function handleClick() {\n    switch (this.next) {\n      case NEXT_ACTION.SHOW_ALL:\n        this.editor.setView({\n          html: true,\n          md: true\n        });\n        break;\n\n      case NEXT_ACTION.SHOW_HTML:\n        this.editor.setView({\n          html: true,\n          md: false\n        });\n        break;\n\n      case NEXT_ACTION.SHOW_MD:\n        this.editor.setView({\n          html: false,\n          md: true\n        });\n        break;\n    }\n  };\n\n  _proto.handleChange = function handleChange(view) {\n    this.setState({\n      view: view\n    });\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.editor.on('viewchange', this.handleChange);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.editor.off('viewchange', this.handleChange);\n  };\n\n  _proto.getDisplayInfo = function getDisplayInfo() {\n    var next = this.next;\n\n    switch (next) {\n      case NEXT_ACTION.SHOW_ALL:\n        return {\n          icon: 'view-split',\n          title: 'All'\n        };\n\n      case NEXT_ACTION.SHOW_HTML:\n        return {\n          icon: 'visibility',\n          title: 'Preview'\n        };\n\n      default:\n        return {\n          icon: 'keyboard',\n          title: 'Editor'\n        };\n    }\n  };\n\n  _proto.render = function render() {\n    if (this.isDisplay) {\n      var display = this.getDisplayInfo();\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: \"button button-type-mode\",\n        title: i18n.get(\"btnMode\" + display.title),\n        onClick: this.handleClick\n      }, /*#__PURE__*/React.createElement(Icon, {\n        type: display.icon\n      }));\n    }\n\n    return null;\n  };\n\n  _createClass(ModeToggle, [{\n    key: \"isDisplay\",\n    get: function get() {\n      var canView = this.editorConfig.canView;\n\n      if (canView) {\n        // 至少有两种情况可以显示的时候，才会显示切换按钮\n        return [canView.html, canView.md, canView.both].filter(function (it) {\n          return it;\n        }).length >= 2;\n      }\n\n      return false;\n    }\n    /**\n     * 显示标准：\n     * 两个都显示的时候，点击显示MD，隐藏HTML\n     * 只显示HTML的时候，点击全部显示\n     * 只显示MD的时候，点击显示HTML，隐藏MD\n     * 如果当前标准因canView不可用，则顺延至下一个\n     * 如果都不可用，则返回当前状态\n     */\n\n  }, {\n    key: \"next\",\n    get: function get() {\n      var canView = this.editorConfig.canView;\n      var view = this.state.view;\n      var actions = [NEXT_ACTION.SHOW_ALL, NEXT_ACTION.SHOW_MD, NEXT_ACTION.SHOW_HTML];\n\n      if (canView) {\n        if (!canView.both) {\n          actions.splice(actions.indexOf(NEXT_ACTION.SHOW_ALL), 1);\n        }\n\n        if (!canView.md) {\n          actions.splice(actions.indexOf(NEXT_ACTION.SHOW_MD), 1);\n        }\n\n        if (!canView.html) {\n          actions.splice(actions.indexOf(NEXT_ACTION.SHOW_HTML), 1);\n        }\n      }\n\n      var current = NEXT_ACTION.SHOW_MD;\n\n      if (view.html) {\n        current = NEXT_ACTION.SHOW_HTML;\n      }\n\n      if (view.html && view.md) {\n        current = NEXT_ACTION.SHOW_ALL;\n      }\n\n      if (actions.length === 0) return current;\n      if (actions.length === 1) return actions[0];\n      var index = actions.indexOf(current);\n      return index < actions.length - 1 ? actions[index + 1] : actions[0];\n    }\n  }]);\n\n  return ModeToggle;\n}(PluginComponent);\n\nModeToggle.pluginName = 'mode-toggle';\nModeToggle.align = 'right';\nexport default ModeToggle;"]},"metadata":{},"sourceType":"module"}