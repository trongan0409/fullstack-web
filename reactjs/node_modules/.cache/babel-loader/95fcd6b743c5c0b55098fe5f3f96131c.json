{"ast":null,"code":"import _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport * as React from 'react';\nimport Icon from '../components/Icon';\nimport i18n from '../i18n';\nimport { PluginComponent } from './Plugin';\n\nvar FullScreen = /*#__PURE__*/function (_PluginComponent) {\n  _inheritsLoose(FullScreen, _PluginComponent);\n\n  function FullScreen(props) {\n    var _this;\n\n    _this = _PluginComponent.call(this, props) || this;\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.state = {\n      enable: _this.editor.isFullScreen()\n    };\n    return _this;\n  }\n\n  var _proto = FullScreen.prototype;\n\n  _proto.handleClick = function handleClick() {\n    this.editor.fullScreen(!this.state.enable);\n  };\n\n  _proto.handleChange = function handleChange(enable) {\n    this.setState({\n      enable: enable\n    });\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.editor.on('fullscreen', this.handleChange);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.editor.off('fullscreen', this.handleChange);\n  };\n\n  _proto.render = function render() {\n    if (this.editorConfig.canView && this.editorConfig.canView.fullScreen) {\n      var enable = this.state.enable;\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: \"button button-type-fullscreen\",\n        title: i18n.get(enable ? 'btnExitFullScreen' : 'btnFullScreen'),\n        onClick: this.handleClick\n      }, /*#__PURE__*/React.createElement(Icon, {\n        type: enable ? 'fullscreen-exit' : 'fullscreen'\n      }));\n    }\n\n    return null;\n  };\n\n  return FullScreen;\n}(PluginComponent);\n\nFullScreen.pluginName = 'full-screen';\nFullScreen.align = 'right';\nexport { FullScreen as default };","map":{"version":3,"sources":["E:/fullstack/reactjs/node_modules/react-markdown-editor-lite/esm/plugins/fullScreen.js"],"names":["_assertThisInitialized","_inheritsLoose","React","Icon","i18n","PluginComponent","FullScreen","_PluginComponent","props","_this","call","handleClick","bind","handleChange","state","enable","editor","isFullScreen","_proto","prototype","fullScreen","setState","componentDidMount","on","componentWillUnmount","off","render","editorConfig","canView","createElement","className","title","get","onClick","type","pluginName","align","default"],"mappings":"AAAA,OAAOA,sBAAP,MAAmC,8CAAnC;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,eAAT,QAAgC,UAAhC;;AAEA,IAAIC,UAAU,GAAG,aAAa,UAAUC,gBAAV,EAA4B;AACxDN,EAAAA,cAAc,CAACK,UAAD,EAAaC,gBAAb,CAAd;;AAEA,WAASD,UAAT,CAAoBE,KAApB,EAA2B;AACzB,QAAIC,KAAJ;;AAEAA,IAAAA,KAAK,GAAGF,gBAAgB,CAACG,IAAjB,CAAsB,IAAtB,EAA4BF,KAA5B,KAAsC,IAA9C;AACAC,IAAAA,KAAK,CAACE,WAAN,GAAoBF,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuBZ,sBAAsB,CAACS,KAAD,CAA7C,CAApB;AACAA,IAAAA,KAAK,CAACI,YAAN,GAAqBJ,KAAK,CAACI,YAAN,CAAmBD,IAAnB,CAAwBZ,sBAAsB,CAACS,KAAD,CAA9C,CAArB;AACAA,IAAAA,KAAK,CAACK,KAAN,GAAc;AACZC,MAAAA,MAAM,EAAEN,KAAK,CAACO,MAAN,CAAaC,YAAb;AADI,KAAd;AAGA,WAAOR,KAAP;AACD;;AAED,MAAIS,MAAM,GAAGZ,UAAU,CAACa,SAAxB;;AAEAD,EAAAA,MAAM,CAACP,WAAP,GAAqB,SAASA,WAAT,GAAuB;AAC1C,SAAKK,MAAL,CAAYI,UAAZ,CAAuB,CAAC,KAAKN,KAAL,CAAWC,MAAnC;AACD,GAFD;;AAIAG,EAAAA,MAAM,CAACL,YAAP,GAAsB,SAASA,YAAT,CAAsBE,MAAtB,EAA8B;AAClD,SAAKM,QAAL,CAAc;AACZN,MAAAA,MAAM,EAAEA;AADI,KAAd;AAGD,GAJD;;AAMAG,EAAAA,MAAM,CAACI,iBAAP,GAA2B,SAASA,iBAAT,GAA6B;AACtD,SAAKN,MAAL,CAAYO,EAAZ,CAAe,YAAf,EAA6B,KAAKV,YAAlC;AACD,GAFD;;AAIAK,EAAAA,MAAM,CAACM,oBAAP,GAA8B,SAASA,oBAAT,GAAgC;AAC5D,SAAKR,MAAL,CAAYS,GAAZ,CAAgB,YAAhB,EAA8B,KAAKZ,YAAnC;AACD,GAFD;;AAIAK,EAAAA,MAAM,CAACQ,MAAP,GAAgB,SAASA,MAAT,GAAkB;AAChC,QAAI,KAAKC,YAAL,CAAkBC,OAAlB,IAA6B,KAAKD,YAAL,CAAkBC,OAAlB,CAA0BR,UAA3D,EAAuE;AACrE,UAAIL,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAxB;AACA,aAAO,aAAab,KAAK,CAAC2B,aAAN,CAAoB,MAApB,EAA4B;AAC9CC,QAAAA,SAAS,EAAE,+BADmC;AAE9CC,QAAAA,KAAK,EAAE3B,IAAI,CAAC4B,GAAL,CAASjB,MAAM,GAAG,mBAAH,GAAyB,eAAxC,CAFuC;AAG9CkB,QAAAA,OAAO,EAAE,KAAKtB;AAHgC,OAA5B,EAIjB,aAAaT,KAAK,CAAC2B,aAAN,CAAoB1B,IAApB,EAA0B;AACxC+B,QAAAA,IAAI,EAAEnB,MAAM,GAAG,iBAAH,GAAuB;AADK,OAA1B,CAJI,CAApB;AAOD;;AAED,WAAO,IAAP;AACD,GAbD;;AAeA,SAAOT,UAAP;AACD,CAnD6B,CAmD5BD,eAnD4B,CAA9B;;AAqDAC,UAAU,CAAC6B,UAAX,GAAwB,aAAxB;AACA7B,UAAU,CAAC8B,KAAX,GAAmB,OAAnB;AACA,SAAS9B,UAAU,IAAI+B,OAAvB","sourcesContent":["import _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport * as React from 'react';\nimport Icon from '../components/Icon';\nimport i18n from '../i18n';\nimport { PluginComponent } from './Plugin';\n\nvar FullScreen = /*#__PURE__*/function (_PluginComponent) {\n  _inheritsLoose(FullScreen, _PluginComponent);\n\n  function FullScreen(props) {\n    var _this;\n\n    _this = _PluginComponent.call(this, props) || this;\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.state = {\n      enable: _this.editor.isFullScreen()\n    };\n    return _this;\n  }\n\n  var _proto = FullScreen.prototype;\n\n  _proto.handleClick = function handleClick() {\n    this.editor.fullScreen(!this.state.enable);\n  };\n\n  _proto.handleChange = function handleChange(enable) {\n    this.setState({\n      enable: enable\n    });\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.editor.on('fullscreen', this.handleChange);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.editor.off('fullscreen', this.handleChange);\n  };\n\n  _proto.render = function render() {\n    if (this.editorConfig.canView && this.editorConfig.canView.fullScreen) {\n      var enable = this.state.enable;\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: \"button button-type-fullscreen\",\n        title: i18n.get(enable ? 'btnExitFullScreen' : 'btnFullScreen'),\n        onClick: this.handleClick\n      }, /*#__PURE__*/React.createElement(Icon, {\n        type: enable ? 'fullscreen-exit' : 'fullscreen'\n      }));\n    }\n\n    return null;\n  };\n\n  return FullScreen;\n}(PluginComponent);\n\nFullScreen.pluginName = 'full-screen';\nFullScreen.align = 'right';\nexport { FullScreen as default };"]},"metadata":{},"sourceType":"module"}