{"ast":null,"code":"import * as uuid from 'uuid/v4';\nimport getDecorated from './decorate';\nimport { isPromise } from './tool';\n\nfunction getUploadPlaceholder(file, onImageUpload) {\n  var placeholder = getDecorated('', 'image', {\n    target: 'Uploading_' + uuid(),\n    imageUrl: ''\n  }).text;\n  var uploaded = new Promise(function (resolve) {\n    var isCallback = true;\n\n    var handleUploaded = function handleUploaded(url) {\n      if (isCallback) {\n        console.warn('Deprecated: onImageUpload should return a Promise, callback will be removed in future');\n      }\n\n      resolve(getDecorated('', 'image', {\n        target: file.name,\n        imageUrl: url\n      }).text);\n    }; // 兼容回调和Promise\n\n\n    var upload = onImageUpload(file, handleUploaded);\n\n    if (isPromise(upload)) {\n      isCallback = false;\n      upload.then(handleUploaded);\n    }\n  });\n  return {\n    placeholder: placeholder,\n    uploaded: uploaded\n  };\n}\n\nexport default getUploadPlaceholder;","map":{"version":3,"sources":["E:/fullstack/reactjs/node_modules/react-markdown-editor-lite/esm/utils/uploadPlaceholder.js"],"names":["uuid","getDecorated","isPromise","getUploadPlaceholder","file","onImageUpload","placeholder","target","imageUrl","text","uploaded","Promise","resolve","isCallback","handleUploaded","url","console","warn","name","upload","then"],"mappings":"AAAA,OAAO,KAAKA,IAAZ,MAAsB,SAAtB;AACA,OAAOC,YAAP,MAAyB,YAAzB;AACA,SAASC,SAAT,QAA0B,QAA1B;;AAEA,SAASC,oBAAT,CAA8BC,IAA9B,EAAoCC,aAApC,EAAmD;AACjD,MAAIC,WAAW,GAAGL,YAAY,CAAC,EAAD,EAAK,OAAL,EAAc;AAC1CM,IAAAA,MAAM,EAAE,eAAeP,IAAI,EADe;AAE1CQ,IAAAA,QAAQ,EAAE;AAFgC,GAAd,CAAZ,CAGfC,IAHH;AAIA,MAAIC,QAAQ,GAAG,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AAC5C,QAAIC,UAAU,GAAG,IAAjB;;AAEA,QAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,GAAxB,EAA6B;AAChD,UAAIF,UAAJ,EAAgB;AACdG,QAAAA,OAAO,CAACC,IAAR,CAAa,uFAAb;AACD;;AAEDL,MAAAA,OAAO,CAACX,YAAY,CAAC,EAAD,EAAK,OAAL,EAAc;AAChCM,QAAAA,MAAM,EAAEH,IAAI,CAACc,IADmB;AAEhCV,QAAAA,QAAQ,EAAEO;AAFsB,OAAd,CAAZ,CAGLN,IAHI,CAAP;AAID,KATD,CAH4C,CAYzC;;;AAGH,QAAIU,MAAM,GAAGd,aAAa,CAACD,IAAD,EAAOU,cAAP,CAA1B;;AAEA,QAAIZ,SAAS,CAACiB,MAAD,CAAb,EAAuB;AACrBN,MAAAA,UAAU,GAAG,KAAb;AACAM,MAAAA,MAAM,CAACC,IAAP,CAAYN,cAAZ;AACD;AACF,GArBc,CAAf;AAsBA,SAAO;AACLR,IAAAA,WAAW,EAAEA,WADR;AAELI,IAAAA,QAAQ,EAAEA;AAFL,GAAP;AAID;;AAED,eAAeP,oBAAf","sourcesContent":["import * as uuid from 'uuid/v4';\nimport getDecorated from './decorate';\nimport { isPromise } from './tool';\n\nfunction getUploadPlaceholder(file, onImageUpload) {\n  var placeholder = getDecorated('', 'image', {\n    target: 'Uploading_' + uuid(),\n    imageUrl: ''\n  }).text;\n  var uploaded = new Promise(function (resolve) {\n    var isCallback = true;\n\n    var handleUploaded = function handleUploaded(url) {\n      if (isCallback) {\n        console.warn('Deprecated: onImageUpload should return a Promise, callback will be removed in future');\n      }\n\n      resolve(getDecorated('', 'image', {\n        target: file.name,\n        imageUrl: url\n      }).text);\n    }; // 兼容回调和Promise\n\n\n    var upload = onImageUpload(file, handleUploaded);\n\n    if (isPromise(upload)) {\n      isCallback = false;\n      upload.then(handleUploaded);\n    }\n  });\n  return {\n    placeholder: placeholder,\n    uploaded: uploaded\n  };\n}\n\nexport default getUploadPlaceholder;"]},"metadata":{},"sourceType":"module"}