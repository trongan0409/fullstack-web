{"ast":null,"code":"var _jsxFileName = \"E:\\\\fullstack\\\\reactjs\\\\src\\\\containers\\\\System\\\\ModalEditUser.js\";\nimport React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { emitter } from '../../utils/emitter';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ModalEditUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.props.toggleEditUser();\n    };\n\n    this.handleOnchange = (event, id) => {\n      let copyState = { ...this.state\n      };\n      copyState[id] = event.target.value;\n      this.setState({ ...copyState\n      });\n    };\n\n    this.checkValidate = () => {\n      let isValid = true;\n      let arrInput = ['email', 'password', 'fullName', 'address', 'phoneNumber', 'gender'];\n\n      for (let i = 0; i < arrInput.length; i++) {\n        if (!this.state[arrInput[i]]) {\n          isValid = false;\n          alert('Missing parameter: ' + arrInput[i]);\n          break;\n        }\n      }\n\n      return isValid;\n    };\n\n    this.handleAddNewUser = () => {\n      let isValid = this.checkValidate();\n\n      if (isValid === true) {\n        this.props.createNewUser(this.state);\n      }\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      fullName: '',\n      address: '',\n      phoneNumber: '',\n      gender: ''\n    };\n  }\n\n  componentDidMount() {\n    let user = this.props.currentUser;\n\n    if (user && !_.isEmpty(user)) {\n      this.setState({\n        email: user.email,\n        password: user.password,\n        fullName: user.fullName,\n        address: user.address,\n        phoneNumber: user.phoneNumber,\n        gender: user.gender\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: this.props.isOpen,\n      toggle: () => {\n        this.toggle();\n      },\n      className: 'abcClassname',\n      size: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => {\n          this.toggle();\n        },\n        children: \"Edit User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              action: \"postCRUD\",\n              method: \"post\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"inputEmail4\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  class: \"form-control\",\n                  name: \"email\",\n                  placeholder: \"Input here...\",\n                  onChange: event => {\n                    this.handleOnchange(event, 'email');\n                  },\n                  value: this.state.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"inputPassword4\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  class: \"form-control\",\n                  name: \"password\",\n                  placeholder: \"Input here...\",\n                  onChange: event => {\n                    this.handleOnchange(event, 'password');\n                  },\n                  value: this.state.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"inputName\",\n                  children: \"fullName\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  class: \"form-control\",\n                  name: \"fullName\",\n                  placeholder: \"Input here...\",\n                  onChange: event => {\n                    this.handleOnchange(event, 'fullName');\n                  },\n                  value: this.state.fullName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"inputAddress\",\n                  children: \"Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  class: \"form-control\",\n                  name: \"address\",\n                  placeholder: \" Input here...\",\n                  onChange: event => {\n                    this.handleOnchange(event, 'address');\n                  },\n                  value: this.state.address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"inputPhone\",\n                  children: \"Phone Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  class: \"form-control\",\n                  name: \"phoneNumber\",\n                  placeholder: \" Input here...\",\n                  onChange: event => {\n                    this.handleOnchange(event, 'phoneNumber');\n                  },\n                  value: this.state.phoneNumber\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"form-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    for: \"inputGender\",\n                    children: \"Gender\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"form-check\",\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    class: \"form-check-label\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"radio\",\n                      className: \"\",\n                      name: \"gender\",\n                      value: \"1\",\n                      onChange: event => {\n                        this.handleOnchange(event, 'gender');\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 45\n                    }, this), \"Male\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"form-check\",\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    class: \"form-check-label\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"radio\",\n                      className: \"\",\n                      name: \"gender\",\n                      value: \"0\",\n                      onChange: event => {\n                        this.handleOnchange(event, 'gender');\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 45\n                    }, this), \"Female\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"px-3\",\n          color: \"primary\",\n          onClick: () => {\n            this.handleAddNewUser();\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n          className: \"px-3\",\n          color: \"secondary\",\n          onClick: () => {\n            this.toggle();\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalEditUser);","map":{"version":3,"sources":["E:/fullstack/reactjs/src/containers/System/ModalEditUser.js"],"names":["React","Component","FormattedMessage","connect","Button","Modal","ModalHeader","ModalBody","ModalFooter","emitter","_","ModalEditUser","constructor","props","toggle","toggleEditUser","handleOnchange","event","id","copyState","state","target","value","setState","checkValidate","isValid","arrInput","i","length","alert","handleAddNewUser","createNewUser","email","password","fullName","address","phoneNumber","gender","componentDidMount","user","currentUser","isEmpty","render","isOpen","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { emitter } from '../../utils/emitter';\r\nimport _ from 'lodash';\r\n\r\n\r\nclass ModalEditUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            fullName: '',\r\n            address: '',\r\n            phoneNumber: '',\r\n            gender: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let user = this.props.currentUser;\r\n        if (user && !_.isEmpty(user)) {\r\n            this.setState({\r\n                email: user.email,\r\n                password: user.password,\r\n                fullName: user.fullName,\r\n                address: user.address,\r\n                phoneNumber: user.phoneNumber,\r\n                gender: user.gender,\r\n            })\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.props.toggleEditUser();\r\n    };\r\n\r\n    handleOnchange = (event, id) => {\r\n        let copyState = { ...this.state };\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            ...copyState\r\n        });\r\n    };\r\n\r\n    checkValidate = () => {\r\n        let isValid = true;\r\n        let arrInput = ['email', 'password', 'fullName', 'address', 'phoneNumber', 'gender'];\r\n        for (let i = 0; i < arrInput.length; i++) {\r\n            if (!this.state[arrInput[i]]) {\r\n                isValid = false;\r\n                alert('Missing parameter: ' + arrInput[i]);\r\n                break;\r\n            }\r\n        }\r\n        return isValid;\r\n    };\r\n\r\n    handleAddNewUser = () => {\r\n        let isValid = this.checkValidate();\r\n        if (isValid === true) {\r\n            this.props.createNewUser(this.state);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                isOpen={this.props.isOpen}\r\n                toggle={() => { this.toggle() }}\r\n                className={'abcClassname'}\r\n                size='md'\r\n            >\r\n                <ModalHeader toggle={() => { this.toggle() }}>Edit User</ModalHeader>\r\n                <ModalBody>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <form action=\"postCRUD\" method=\"post\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"inputEmail4\">Email</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        class=\"form-control\"\r\n                                        name=\"email\"\r\n                                        placeholder=\"Input here...\"\r\n                                        onChange={(event) => { this.handleOnchange(event, 'email') }}\r\n                                        value={this.state.email}\r\n                                    />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"inputPassword4\">Password</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        class=\"form-control\"\r\n                                        name=\"password\"\r\n                                        placeholder=\"Input here...\"\r\n                                        onChange={(event) => { this.handleOnchange(event, 'password') }}\r\n                                        value={this.state.password}\r\n                                    />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"inputName\">fullName</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        class=\"form-control\"\r\n                                        name=\"fullName\"\r\n                                        placeholder=\"Input here...\"\r\n                                        onChange={(event) => { this.handleOnchange(event, 'fullName') }}\r\n                                        value={this.state.fullName}\r\n                                    />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"inputAddress\">Address</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        class=\"form-control\"\r\n                                        name=\"address\"\r\n                                        placeholder=\" Input here...\"\r\n                                        onChange={(event) => { this.handleOnchange(event, 'address') }}\r\n                                        value={this.state.address}\r\n                                    />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"inputPhone\">Phone Number</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        class=\"form-control\"\r\n                                        name=\"phoneNumber\"\r\n                                        placeholder=\" Input here...\"\r\n                                        onChange={(event) => { this.handleOnchange(event, 'phoneNumber') }}\r\n                                        value={this.state.phoneNumber}\r\n                                    />\r\n                                </div>\r\n                                <div class=\"form-row\">\r\n                                    <div>\r\n                                        <label for=\"inputGender\">Gender</label>\r\n                                    </div>\r\n                                    <div class=\"form-check\">\r\n                                        <label class=\"form-check-label\">\r\n                                            <input\r\n                                                type=\"radio\"\r\n                                                className=''\r\n                                                name=\"gender\" value=\"1\"\r\n                                                onChange={(event) => { this.handleOnchange(event, 'gender') }}\r\n                                            />Male\r\n                                        </label>\r\n                                    </div>\r\n                                    <div class=\"form-check\">\r\n                                        <label class=\"form-check-label\">\r\n                                            <input\r\n                                                type=\"radio\"\r\n                                                className=''\r\n                                                name=\"gender\"\r\n                                                value=\"0\"\r\n                                                onChange={(event) => { this.handleOnchange(event, 'gender') }}\r\n                                            />Female\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button className='px-3' color=\"primary\" onClick={() => { this.handleAddNewUser() }}>\r\n                        Save\r\n                    </Button>{' '}\r\n                    <Button className='px-3' color=\"secondary\" onClick={() => { this.toggle() }}>\r\n                        Cancel\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalEditUser);\r\n"]},"metadata":{},"sourceType":"module"}