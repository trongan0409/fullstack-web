{"ast":null,"code":"var _jsxFileName = \"E:\\\\fullstack\\\\reactjs\\\\src\\\\containers\\\\System\\\\Product\\\\TableManageProduct.js\";\nimport React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport './TableManageProduct.scss';\nimport * as actions from '../../../store/actions';\nimport MarkdownIt from 'markdown-it';\nimport MdEditor from 'react-markdown-editor-lite'; // import style manually\n\nimport 'react-markdown-editor-lite/lib/index.css'; // Register plugins if required\n// MdEditor.use(YOUR_PLUGINS_HERE);\n// Initialize a markdown parser\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mdParser = new MarkdownIt(); // Finish!\n\nfunction handleEditorChange({\n  html,\n  text\n}) {\n  console.log('handleEditorChange', html, text);\n}\n\nclass TableManageProduct extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDeleteProduct = product => {\n      this.props.deleteProduct(product.id);\n    };\n\n    this.handleEditUser = product => {\n      this.props.handleEditProductParent(product);\n    };\n\n    this.state = {\n      productRedux: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.getAllProduct();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.allProducts !== this.props.allProducts) {\n      this.setState({\n        productRedux: this.props.allProducts\n      });\n    }\n  }\n\n  render() {\n    let {\n      productRedux\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"users-container mx-0\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"TableManageProduct\",\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Slug\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), productRedux && productRedux.length > 0 && productRedux.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.nameProduct\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.categoryType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.slug\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn-edit\",\n                  onClick: () => this.handleEditUser(item),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-pencil-alt\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 46\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    this.handleDeleteProduct(item);\n                  },\n                  type: \"button\",\n                  className: \"btn-delete\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-trash\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 46\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 37\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MdEditor, {\n        style: {\n          height: '500px'\n        },\n        renderHTML: text => mdParser.render(text),\n        onChange: handleEditorChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    allProducts: state.product.products\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllProduct: () => dispatch(actions.getAllProductStart()),\n    deleteProduct: id => dispatch(actions.deleteProductStart(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableManageProduct);","map":{"version":3,"sources":["E:/fullstack/reactjs/src/containers/System/Product/TableManageProduct.js"],"names":["React","Component","FormattedMessage","connect","actions","MarkdownIt","MdEditor","mdParser","handleEditorChange","html","text","console","log","TableManageProduct","constructor","props","handleDeleteProduct","product","deleteProduct","id","handleEditUser","handleEditProductParent","state","productRedux","componentDidMount","getAllProduct","componentDidUpdate","prevProps","prevState","snapshot","allProducts","setState","render","length","map","item","index","nameProduct","categoryType","price","quantity","slug","status","height","mapStateToProps","products","mapDispatchToProps","dispatch","getAllProductStart","deleteProductStart"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport './TableManageProduct.scss';\r\nimport * as actions from '../../../store/actions';\r\n\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\n// import style manually\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\n// Register plugins if required\r\n// MdEditor.use(YOUR_PLUGINS_HERE);\r\n// Initialize a markdown parser\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\r\n// Finish!\r\nfunction handleEditorChange({ html, text }) {\r\n    console.log('handleEditorChange', html, text);\r\n}\r\n\r\nclass TableManageProduct extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            productRedux: []\r\n        };\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getAllProduct();\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.allProducts !== this.props.allProducts) {\r\n            this.setState({ productRedux: this.props.allProducts })\r\n        }\r\n    };\r\n\r\n    handleDeleteProduct = (product) => {\r\n        this.props.deleteProduct(product.id);\r\n    }\r\n\r\n    handleEditUser = (product) => {\r\n        this.props.handleEditProductParent(product);\r\n    };\r\n\r\n    render() {\r\n        let { productRedux } = this.state;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className='users-container mx-0'>\r\n                    <table id='TableManageProduct'>\r\n                        <tr>\r\n                            <th>Product Name</th>\r\n                            <th>Category Type</th>\r\n                            <th>Price</th>\r\n                            <th>Quantity</th>\r\n                            <th>Slug</th>\r\n                            <th>Status</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                        {productRedux && productRedux.length > 0 &&\r\n                            productRedux.map((item, index) => {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td>{item.nameProduct}</td>\r\n                                        <td>{item.categoryType}</td>\r\n                                        <td>{item.price}</td>\r\n                                        <td>{item.quantity}</td>\r\n                                        <td>{item.slug}</td>\r\n                                        <td>{item.status}</td>\r\n                                        <td>\r\n                                            <button\r\n                                                type='button'\r\n                                                className='btn-edit'\r\n                                                onClick={() => this.handleEditUser(item)}\r\n                                            ><i className='fas fa-pencil-alt'></i></button>\r\n                                            <button\r\n                                                onClick={() => { this.handleDeleteProduct(item) }}\r\n                                                type='button'\r\n                                                className='btn-delete'\r\n                                            ><i className='fas fa-trash'></i></button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </table>\r\n                </div>\r\n                <MdEditor style={{ height: '500px' }} renderHTML={text => mdParser.render(text)} onChange={handleEditorChange} />\r\n            </React.Fragment>\r\n\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allProducts: state.product.products\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getAllProduct: () => dispatch(actions.getAllProductStart()),\r\n        deleteProduct: (id) => dispatch(actions.deleteProductStart(id))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableManageProduct);\r\n"]},"metadata":{},"sourceType":"module"}