{"ast":null,"code":"var _jsxFileName = \"E:\\\\fullstack\\\\reactjs\\\\src\\\\containers\\\\System\\\\Admin\\\\UserRedux.js\";\nimport React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport './UserRedux.scss';\nimport { languages } from '../../../utils';\nimport * as actions from '../../../store/actions';\nimport LightBox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserRedux extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChangeImage = event => {\n      let fileImage = event.target.files;\n      let file = fileImage[0];\n\n      if (file) {\n        let imageObjectUrl = URL.createObjectURL(file);\n        this.setState({\n          previewImageURL: imageObjectUrl\n        });\n      }\n    };\n\n    this.isOpenImage = () => {\n      if (!this.state.previewImageURL) return;\n      this.setState({\n        isOpen: true\n      });\n    };\n\n    this.handleCreateUser = () => {};\n\n    this.handleOnChangeInput = (event, id) => {\n      let copyState = { ...this.state\n      };\n      copyState[id] = event.target.value;\n      this.setState({ ...copyState\n      });\n    };\n\n    this.state = {\n      genderArray: [],\n      roleArray: [],\n      previewImageURL: '',\n      isOpen: false,\n      email: '',\n      password: '',\n      fullName: '',\n      phoneNumber: '',\n      address: '',\n      gender: '',\n      roleId: '',\n      avatar: ''\n    };\n  }\n\n  async componentDidMount() {\n    this.props.getGenderStart();\n    this.props.getRoleStart(); // try {\n    //     let res = await getAllCodeService('gender');\n    //     if (res && res.errCode === 0) {\n    //         this.setState({\n    //             genderArray: res.data\n    //         })\n    //     }\n    //     console.log('check res', res);\n    // } catch (e) {\n    //     console.log(e);\n    // }\n  }\n\n  componentDidUpdate(prevProps, prevState, spapshot) {\n    if (prevProps.genderRedux !== this.props.genderRedux) {\n      let arrGender = this.props.genderRedux;\n      this.setState({\n        genderArray: arrGender,\n        gender: arrGender && arrGender.length > 0 ? arrGender[0].key : ''\n      });\n    }\n\n    ;\n\n    if (prevProps.roleRedux !== this.props.roleRedux) {\n      this.setState({\n        roleArray: this.props.roleRedux\n      });\n    }\n  }\n\n  render() {\n    let genders = this.state.genderArray;\n    let roles = this.state.roleArray;\n    let language = this.props.language;\n    let isLoadingGender = this.props.isLoadingGender;\n    let {\n      email,\n      password,\n      fullName,\n      phoneNumber,\n      address,\n      gender,\n      roleId,\n      avatar\n    } = this.state;\n    console.log('check state', this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-redux-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"USER MANAGEMENT USING REDUX\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 my-3\",\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"manage-user.add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"manage-user.email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"email\",\n              value: email,\n              onChange: event => this.handleOnChangeInput(event, 'email')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"manage-user.password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"password\",\n              value: password,\n              onChange: event => this.handleOnChangeInput(event, 'password')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"manage-user.fullname\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              value: fullName,\n              onChange: event => this.handleOnChangeInput(event, 'fullName')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"manage-user.phonenumber\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              value: phoneNumber,\n              onChange: event => this.handleOnChangeInput(event, 'phoneNumber')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"manage-user.address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              value: address,\n              onChange: event => this.handleOnChangeInput(event, 'address')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"manage-user.gender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              value: gender,\n              onChange: event => this.handleOnChangeInput(event, 'gender'),\n              children: genders && genders.length > 0 && genders.map((item, index) => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: item.key,\n                  children: language === languages.VI ? item.valueVi : item.valueEn\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"manage-user.image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-img-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"previewImg\",\n                type: \"file\",\n                hidden: true,\n                onChange: event => this.handleOnChangeImage(event)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"label-upload\",\n                htmlFor: \"previewImg\",\n                children: [\"T\\u1EA3i \\u1EA3nh \", /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 94\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-image\",\n                style: {\n                  backgroundImage: `url(${this.state.previewImageURL})`\n                },\n                onClick: () => this.isOpenImage()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"manage-user.roleid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              value: roleId,\n              onChange: event => this.handleOnChangeInput(event, 'roleId'),\n              children: roles && roles.length > 0 && roles.map((item, index) => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: item.key,\n                  children: language === languages.VI ? item.valueVi : item.valueEn\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 mt-3\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: () => this.handleCreateUser(),\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"manage-user.create\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 30\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), this.state.isOpen === true && /*#__PURE__*/_jsxDEV(LightBox, {\n        mainSrc: this.state.previewImageURL,\n        onCloseRequest: () => this.setState({\n          isOpen: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language,\n    genderRedux: state.admin.genders,\n    roleRedux: state.admin.roles,\n    isLoadingGender: state.admin.isLoadingGender\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getGenderStart: () => dispatch(actions.fetchGenderStart()),\n    getRoleStart: () => dispatch(actions.fetchRoleStart()) //processLogout: () => dispatch(actions.processLogout()),\n    //changeLanguageAppRedux: (language) => dispatch(actions.changeLanguageApp(language))\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRedux);","map":{"version":3,"sources":["E:/fullstack/reactjs/src/containers/System/Admin/UserRedux.js"],"names":["React","Component","FormattedMessage","connect","languages","actions","LightBox","UserRedux","constructor","props","handleOnChangeImage","event","fileImage","target","files","file","imageObjectUrl","URL","createObjectURL","setState","previewImageURL","isOpenImage","state","isOpen","handleCreateUser","handleOnChangeInput","id","copyState","value","genderArray","roleArray","email","password","fullName","phoneNumber","address","gender","roleId","avatar","componentDidMount","getGenderStart","getRoleStart","componentDidUpdate","prevProps","prevState","spapshot","genderRedux","arrGender","length","key","roleRedux","render","genders","roles","language","isLoadingGender","console","log","map","item","index","VI","valueVi","valueEn","backgroundImage","mapStateToProps","app","admin","mapDispatchToProps","dispatch","fetchGenderStart","fetchRoleStart"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport './UserRedux.scss';\r\nimport { languages } from '../../../utils';\r\nimport * as actions from '../../../store/actions';\r\nimport LightBox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\n\r\nclass UserRedux extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            genderArray: [],\r\n            roleArray: [],\r\n            previewImageURL: '',\r\n            isOpen: false,\r\n\r\n            email: '',\r\n            password: '',\r\n            fullName: '',\r\n            phoneNumber: '',\r\n            address: '',\r\n            gender: '',\r\n            roleId: '',\r\n            avatar: ''\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.getGenderStart();\r\n        this.props.getRoleStart();\r\n        // try {\r\n        //     let res = await getAllCodeService('gender');\r\n        //     if (res && res.errCode === 0) {\r\n        //         this.setState({\r\n        //             genderArray: res.data\r\n        //         })\r\n        //     }\r\n        //     console.log('check res', res);\r\n        // } catch (e) {\r\n        //     console.log(e);\r\n        // }\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, spapshot) {\r\n        if (prevProps.genderRedux !== this.props.genderRedux) {\r\n            let arrGender = this.props.genderRedux;\r\n            this.setState({\r\n                genderArray: arrGender,\r\n                gender: arrGender && arrGender.length > 0 ? arrGender[0].key : ''\r\n            })\r\n        };\r\n\r\n        if (prevProps.roleRedux !== this.props.roleRedux) {\r\n            this.setState({\r\n                roleArray: this.props.roleRedux\r\n            })\r\n        }\r\n    };\r\n\r\n    handleOnChangeImage = (event) => {\r\n        let fileImage = event.target.files;\r\n        let file = fileImage[0];\r\n        if (file) {\r\n            let imageObjectUrl = URL.createObjectURL(file);\r\n            this.setState({\r\n                previewImageURL: imageObjectUrl\r\n            })\r\n        }\r\n    };\r\n\r\n    isOpenImage = () => {\r\n        if (!this.state.previewImageURL) return;\r\n\r\n        this.setState({ isOpen: true });\r\n    };\r\n\r\n    handleCreateUser = () => {\r\n\r\n    };\r\n    handleOnChangeInput = (event, id) => {\r\n        let copyState = { ...this.state };\r\n        copyState[id] = event.target.value;\r\n        this.setState({ ...copyState });\r\n    };\r\n\r\n    render() {\r\n        let genders = this.state.genderArray;\r\n        let roles = this.state.roleArray;\r\n        let language = this.props.language;\r\n        let isLoadingGender = this.props.isLoadingGender;\r\n\r\n        let { email, password, fullName, phoneNumber, address, gender, roleId, avatar } = this.state;\r\n        console.log('check state', this.state);\r\n\r\n        return (\r\n            <div className='user-redux-container'>\r\n                <div className=\"title\" >USER MANAGEMENT USING REDUX</div>\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        <div className='col-12 my-3'><FormattedMessage id=\"manage-user.add\" /></div>\r\n                        <div className='col-3'>\r\n                            <label><FormattedMessage id=\"manage-user.email\" /></label>\r\n                            <input className='form-control' type='email' value={email}\r\n                                onChange={(event) => this.handleOnChangeInput(event, 'email')} />\r\n                        </div>\r\n                        <div className='col-3'>\r\n                            <label><FormattedMessage id=\"manage-user.password\" /></label>\r\n                            <input className='form-control' type='password' value={password}\r\n                                onChange={(event) => this.handleOnChangeInput(event, 'password')} />\r\n                        </div>\r\n                        <div className='col-3'>\r\n                            <label><FormattedMessage id=\"manage-user.fullname\" /></label>\r\n                            <input className='form-control' type='text' value={fullName}\r\n                                onChange={(event) => this.handleOnChangeInput(event, 'fullName')} />\r\n                        </div>\r\n                        <div className='col-3'>\r\n                            <label><FormattedMessage id=\"manage-user.phonenumber\" /></label>\r\n                            <input className='form-control' type='text' value={phoneNumber}\r\n                                onChange={(event) => this.handleOnChangeInput(event, 'phoneNumber')} />\r\n                        </div>\r\n                        <div className='col-8'>\r\n                            <label><FormattedMessage id=\"manage-user.address\" /></label>\r\n                            <input className='form-control' type='text' value={address}\r\n                                onChange={(event) => this.handleOnChangeInput(event, 'address')} />\r\n                        </div>\r\n                        <div className='col-4'>\r\n                            <label><FormattedMessage id=\"manage-user.gender\" /></label>\r\n                            <select className=\"form-control\" value={gender}\r\n                                onChange={(event) => this.handleOnChangeInput(event, 'gender')}>\r\n                                {genders && genders.length > 0 &&\r\n                                    genders.map((item, index) => {\r\n                                        return (\r\n                                            <option key={index} value={item.key}>\r\n                                                {language === languages.VI ? item.valueVi : item.valueEn}\r\n                                            </option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        <div className='col-8'>\r\n                            <label><FormattedMessage id=\"manage-user.image\" /></label>\r\n                            <div className='preview-img-container'>\r\n                                <input id='previewImg' type='file' hidden onChange={(event) => this.handleOnChangeImage(event)} />\r\n                                <label className='label-upload' htmlFor=\"previewImg\">Tải ảnh <i className='fas fa-upload'></i></label>\r\n                                <div\r\n                                    className='preview-image'\r\n                                    style={{ backgroundImage: `url(${this.state.previewImageURL})` }}\r\n                                    onClick={() => this.isOpenImage()}\r\n                                ></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-4'>\r\n                            <label><FormattedMessage id=\"manage-user.roleid\" /></label>\r\n                            <select className=\"form-control\" value={roleId}\r\n                                onChange={(event) => this.handleOnChangeInput(event, 'roleId')}>\r\n                                {roles && roles.length > 0 &&\r\n                                    roles.map((item, index) => {\r\n                                        return (\r\n                                            <option key={index} value={item.key}>\r\n                                                {language === languages.VI ? item.valueVi : item.valueEn}\r\n                                            </option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        <div className='col-12 mt-3'>\r\n                            <button\r\n                                className='btn btn-primary'\r\n                                onClick={() => this.handleCreateUser()}\r\n                            ><FormattedMessage id=\"manage-user.create\" /></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.isOpen === true &&\r\n                    <LightBox\r\n                        mainSrc={this.state.previewImageURL}\r\n                        onCloseRequest={() => this.setState({ isOpen: false })}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n        genderRedux: state.admin.genders,\r\n        roleRedux: state.admin.roles,\r\n        isLoadingGender: state.admin.isLoadingGender\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getGenderStart: () => dispatch(actions.fetchGenderStart()),\r\n        getRoleStart: () => dispatch(actions.fetchRoleStart())\r\n        //processLogout: () => dispatch(actions.processLogout()),\r\n        //changeLanguageAppRedux: (language) => dispatch(actions.changeLanguageApp(language))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRedux);\r\n"]},"metadata":{},"sourceType":"module"}