{"ast":null,"code":"var _jsxFileName = \"E:\\\\fullstack\\\\reactjs\\\\src\\\\containers\\\\System\\\\Product\\\\ProductManage.js\";\nimport React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux'; //import './ProductManage.scss';\n\nimport { languages, crudActions, CommonUtils } from '../../../utils';\nimport * as actions from '../../../store/actions';\nimport LightBox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nimport TableManageProduct from './TableManageProduct';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProductManage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.isOpenImage = () => {};\n\n    this.handleCreateProduct = () => {\n      this.props.createProduct({\n        statusProduct: this.state.statusProduct,\n        nameProduct: this.state.statusProduct,\n        categoryType: this.state.categoryType,\n        price: this.state.price,\n        quantity: this.state.quantity,\n        slug: this.state.slug,\n        detail: this.state.detail,\n        status: this.state.status\n      });\n    };\n\n    this.handleUpdateUser = () => {};\n\n    this.handleOnChangeInput = (event, id) => {\n      let copyState = { ...this.state\n      };\n      copyState[id] = event.target.value;\n      this.setState({ ...copyState\n      });\n    };\n\n    this.handleOnChangeImage = async event => {\n      let fileImage = event.target.files;\n      let copyState = { ...this.state\n      };\n      copyState = event.target.value;\n      this.setState({ ...copyState\n      }); // let file = fileImage[0];\n      // if (file) {\n      //     let base64 = await CommonUtils.getBase64(file);\n      //     console.log('check base64 image: ', base64);\n      //     let imageObjectUrl = URL.createObjectURL(file);\n      //     this.setState({\n      //         previewImageURL: imageObjectUrl,\n      //         avatar: base64\n      //     })\n      // }\n    };\n\n    this.checkValidateInput = () => {\n      let isValid = true;\n      let arrCheck = ['nameProduct', 'cattegoryType', 'price', 'quantity', 'slug', 'datail', 'status', 'image'];\n\n      for (let i = 0; i < arrCheck.length; i++) {\n        if (!this.state[arrCheck[i]]) {\n          isValid = false;\n          alert('This input is required: ' + arrCheck[i]);\n          break;\n        }\n      }\n\n      return isValid;\n    };\n\n    this.handleEditUserParent = user => {};\n\n    this.state = {\n      allCodes: [],\n      types: [],\n      statusProduct: [],\n      nameProduct: '',\n      categoryType: '',\n      price: '',\n      quantity: '',\n      slug: '',\n      detail: '',\n      status: '',\n      image: ''\n    };\n  }\n\n  async componentDidMount() {\n    this.props.getType();\n    this.props.getStatus();\n  }\n\n  componentDidUpdate(prevProps, prevState, spapshot) {\n    if (prevProps.types !== prevState.types) {\n      this.setState({\n        types: this.props.types\n      });\n    }\n\n    if (prevProps.statusProduct !== prevState.statusProduct) {\n      this.setState({\n        statusProduct: this.props.statusProduct\n      });\n    }\n  }\n\n  render() {\n    let {\n      types\n    } = this.state;\n    let {\n      statusProduct\n    } = this.state;\n    let {\n      nameProduct,\n      categoryType,\n      price,\n      quantity,\n      slug,\n      detail,\n      status,\n      image\n    } = this.state;\n    console.log('check input state: ', this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-redux-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"manage-product.title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 my-3\",\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"manage-product.add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"manage-product.name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              value: nameProduct,\n              onChange: event => this.handleOnChangeInput(event, 'nameProduct')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"manage-product.type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              value: categoryType,\n              onChange: event => this.handleOnChangeInput(event, 'categoryType'),\n              children: types && types.length > 0 && types.map((item, index) => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: item.valueVi\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"manage-product.price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              value: price,\n              onChange: event => this.handleOnChangeInput(event, 'price')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"manage-product.quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              value: quantity,\n              onChange: event => this.handleOnChangeInput(event, 'quantity')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"manage-product.status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              value: status,\n              onChange: event => this.handleOnChangeInput(event, 'status'),\n              children: statusProduct && statusProduct.length > 0 && statusProduct.map((item, index) => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: item.valueVi\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"manage-product.slug\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              value: slug,\n              onChange: event => this.handleOnChangeInput(event, 'slug')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"manage-product.detail\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              value: detail,\n              onChange: event => this.handleOnChangeInput(event, 'detail')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"manage-product.image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-img-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"previewImg\",\n                type: \"file\",\n                value: image,\n                hidden: true,\n                onChange: event => this.handleOnChangeImage(event)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"label-upload\",\n                htmlFor: \"previewImg\",\n                children: [\"T\\u1EA3i \\u1EA3nh \", /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 94\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-image\",\n                style: {\n                  backgroundImage: `url(${this.state.previewImageURL})`\n                },\n                onClick: () => this.isOpenImage()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 mt-3 mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: () => this.handleCreateProduct(),\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"manage-product.create\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 30\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 mb-5\",\n            children: /*#__PURE__*/_jsxDEV(TableManageProduct, {\n              handleEditUserParent: this.handleEditUserParent,\n              action: this.state.action\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), this.state.isOpen === true && /*#__PURE__*/_jsxDEV(LightBox, {\n        mainSrc: this.state.previewImageURL,\n        onCloseRequest: () => this.setState({\n          isOpen: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    types: state.product.types,\n    statusProduct: state.product.statusProduct\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getType: () => dispatch(actions.getTypeStart()),\n    getStatus: () => dispatch(actions.getStatusStart()),\n    createProduct: dataInput => dispatch(actions.createProductStart(dataInput))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductManage);","map":{"version":3,"sources":["E:/fullstack/reactjs/src/containers/System/Product/ProductManage.js"],"names":["React","Component","FormattedMessage","connect","languages","crudActions","CommonUtils","actions","LightBox","TableManageProduct","ProductManage","constructor","props","isOpenImage","handleCreateProduct","createProduct","statusProduct","state","nameProduct","categoryType","price","quantity","slug","detail","status","handleUpdateUser","handleOnChangeInput","event","id","copyState","target","value","setState","handleOnChangeImage","fileImage","files","checkValidateInput","isValid","arrCheck","i","length","alert","handleEditUserParent","user","allCodes","types","image","componentDidMount","getType","getStatus","componentDidUpdate","prevProps","prevState","spapshot","render","console","log","map","item","index","valueVi","backgroundImage","previewImageURL","action","isOpen","mapStateToProps","product","mapDispatchToProps","dispatch","getTypeStart","getStatusStart","dataInput","createProductStart"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\n//import './ProductManage.scss';\r\nimport { languages, crudActions, CommonUtils } from '../../../utils';\r\nimport * as actions from '../../../store/actions';\r\nimport LightBox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\nimport TableManageProduct from './TableManageProduct';\r\n\r\nclass ProductManage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allCodes: [],\r\n            types: [],\r\n            statusProduct: [],\r\n            nameProduct: '',\r\n            categoryType: '',\r\n            price: '',\r\n            quantity: '',\r\n            slug: '',\r\n            detail: '',\r\n            status: '',\r\n            image: ''\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.getType();\r\n        this.props.getStatus();\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, spapshot) {\r\n        if (prevProps.types !== prevState.types) {\r\n            this.setState({ types: this.props.types })\r\n        }\r\n        if (prevProps.statusProduct !== prevState.statusProduct) {\r\n            this.setState({ statusProduct: this.props.statusProduct })\r\n        }\r\n    };\r\n\r\n    isOpenImage = () => {\r\n\r\n    };\r\n\r\n    handleCreateProduct = () => {\r\n        this.props.createProduct({\r\n            statusProduct: this.state.statusProduct,\r\n            nameProduct: this.state.statusProduct,\r\n            categoryType: this.state.categoryType,\r\n            price: this.state.price,\r\n            quantity: this.state.quantity,\r\n            slug: this.state.slug,\r\n            detail: this.state.detail,\r\n            status: this.state.status\r\n        });\r\n    };\r\n    handleUpdateUser = () => {\r\n\r\n    };\r\n\r\n    handleOnChangeInput = (event, id) => {\r\n        let copyState = { ...this.state };\r\n        copyState[id] = event.target.value;\r\n        this.setState({ ...copyState });\r\n    };\r\n\r\n    handleOnChangeImage = async (event) => {\r\n        let fileImage = event.target.files;\r\n        let copyState = { ...this.state };\r\n        copyState = event.target.value;\r\n        this.setState({ ...copyState });\r\n        // let file = fileImage[0];\r\n        // if (file) {\r\n        //     let base64 = await CommonUtils.getBase64(file);\r\n        //     console.log('check base64 image: ', base64);\r\n        //     let imageObjectUrl = URL.createObjectURL(file);\r\n        //     this.setState({\r\n        //         previewImageURL: imageObjectUrl,\r\n        //         avatar: base64\r\n        //     })\r\n        // }\r\n    };\r\n\r\n    checkValidateInput = () => {\r\n        let isValid = true;\r\n        let arrCheck = ['nameProduct', 'cattegoryType', 'price', 'quantity', 'slug', 'datail', 'status', 'image'];\r\n        for (let i = 0; i < arrCheck.length; i++) {\r\n            if (!this.state[arrCheck[i]]) {\r\n                isValid = false;\r\n                alert('This input is required: ' + arrCheck[i]);\r\n                break;\r\n            }\r\n        }\r\n        return isValid;\r\n    };\r\n\r\n    handleEditUserParent = (user) => {\r\n\r\n    };\r\n\r\n    render() {\r\n\r\n        let { types } = this.state;\r\n        let { statusProduct } = this.state;\r\n        let { nameProduct, categoryType, price, quantity, slug, detail, status, image } = this.state;\r\n        console.log('check input state: ', this.state);\r\n\r\n        return (\r\n            <div className='user-redux-container'>\r\n                <div className=\"title\" ><FormattedMessage id=\"manage-product.title\" /></div>\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        <div className='col-12 my-3'><FormattedMessage id=\"manage-product.add\" /></div>\r\n                        <div className='col-3'>\r\n                            <label><FormattedMessage id=\"manage-product.name\" /></label>\r\n                            <input className='form-control' type='text' value={nameProduct}\r\n                                onChange={(event) => this.handleOnChangeInput(event, 'nameProduct')} />\r\n                        </div>\r\n                        <div className='col-3'>\r\n                            <label><FormattedMessage id=\"manage-product.type\" /></label>\r\n                            <select className=\"form-control\" value={categoryType}\r\n                                onChange={(event) => this.handleOnChangeInput(event, 'categoryType')}\r\n                            >\r\n                                {types && types.length > 0 &&\r\n                                    types.map((item, index) => {\r\n                                        return (\r\n                                            <option key={index}>{item.valueVi}</option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        <div className='col-2'>\r\n                            <label><FormattedMessage id=\"manage-product.price\" /></label>\r\n                            <input className='form-control' type='text' value={price}\r\n                                onChange={(event) => this.handleOnChangeInput(event, 'price')}\r\n                            />\r\n                        </div>\r\n                        <div className='col-2'>\r\n                            <label><FormattedMessage id=\"manage-product.quantity\" /></label>\r\n                            <input className='form-control' type='text' value={quantity}\r\n                                onChange={(event) => this.handleOnChangeInput(event, 'quantity')}\r\n                            />\r\n                        </div>\r\n                        <div className='col-2'>\r\n                            <label><FormattedMessage id=\"manage-product.status\" /></label>\r\n                            <select className=\"form-control\" value={status}\r\n                                onChange={(event) => this.handleOnChangeInput(event, 'status')}\r\n                            >\r\n                                {statusProduct && statusProduct.length > 0 &&\r\n                                    statusProduct.map((item, index) => {\r\n                                        return (\r\n                                            <option key={index}>{item.valueVi}</option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        <div className='col-4'>\r\n                            <label><FormattedMessage id=\"manage-product.slug\" /></label>\r\n                            <input className='form-control' type='text' value={slug}\r\n                                onChange={(event) => this.handleOnChangeInput(event, 'slug')} />\r\n                        </div>\r\n                        <div className='col-5'>\r\n                            <label><FormattedMessage id=\"manage-product.detail\" /></label>\r\n                            <input className='form-control' type='text' value={detail}\r\n                                onChange={(event) => this.handleOnChangeInput(event, 'detail')} />\r\n                        </div>\r\n                        <div className='col-3'>\r\n                            <label><FormattedMessage id=\"manage-product.image\" /></label>\r\n                            <div className='preview-img-container'>\r\n                                <input id='previewImg' type='file' value={image} hidden onChange={(event) => this.handleOnChangeImage(event)} />\r\n                                <label className='label-upload' htmlFor=\"previewImg\">Tải ảnh <i className='fas fa-upload'></i></label>\r\n                                <div\r\n                                    className='preview-image'\r\n                                    style={{ backgroundImage: `url(${this.state.previewImageURL})` }}\r\n                                    onClick={() => this.isOpenImage()}\r\n                                ></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-12 mt-3 mb-4'>\r\n                            <button\r\n                                className='btn btn-primary'\r\n                                onClick={() => this.handleCreateProduct()}\r\n                            ><FormattedMessage id=\"manage-product.create\" /></button>\r\n                        </div>\r\n                        <div className='col-12 mb-5'>\r\n                            <TableManageProduct\r\n                                handleEditUserParent={this.handleEditUserParent}\r\n                                action={this.state.action}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.isOpen === true &&\r\n                    <LightBox\r\n                        mainSrc={this.state.previewImageURL}\r\n                        onCloseRequest={() => this.setState({ isOpen: false })}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        types: state.product.types,\r\n        statusProduct: state.product.statusProduct\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getType: () => dispatch(actions.getTypeStart()),\r\n        getStatus: () => dispatch(actions.getStatusStart()),\r\n        createProduct: (dataInput) => dispatch(actions.createProductStart(dataInput))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductManage);\r\n"]},"metadata":{},"sourceType":"module"}